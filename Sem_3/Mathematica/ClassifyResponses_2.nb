(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    258427,       4732]
NotebookOptionsPosition[    255671,       4633]
NotebookOutlinePosition[    256035,       4649]
CellTagsIndexPosition[    255992,       4646]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"DATA", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\</home/hardik/Desktop/MTech_Project/Scripts/Mathematica/Feature.mat\>\"\
", ",", "\"\<LabeledData\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.680958424114064*^9, 3.680958479938238*^9}, {
  3.6809585344747562`*^9, 3.680958569281595*^9}, {3.680959996919441*^9, 
  3.680960006326516*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\<\"trainData\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "0.25094397308913846`", ",", "0.2638776553765723`", ",", 
                "0.23525621904996974`", ",", "0.3267009170815945`", ",", 
                "0.36227345358035246`", ",", "0.454084757421692`", ",", 
                "0.21260221587932968`", ",", "0.3724367750178997`", ",", 
                "0.368493973389564`"}], "}"}], ",", 
              TemplateBox[{"88378"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, 
                 FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                 RoundingRadius -> 7]& )], ",", 
              RowBox[{"{", 
               RowBox[{"0.45227748195453704`", ",", 
                TemplateBox[{"7"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, 
                   FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                   RoundingRadius -> 7]& )], ",", "0.4953900728732699`"}], 
               "}"}]}], "}"}]}], ",", 
           TemplateBox[{"2"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"\<\"trainLabel\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
               FrameStyle -> None, RoundingRadius -> 7]& )]}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{91., {3., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{81., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 23807589926713275790, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{91., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 23807589926713275790, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{69., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 23807589926713275790, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{124., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{124., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[4]]], "Output",
 CellChangeTimes->{{3.6809584661267147`*^9, 3.6809584807853527`*^9}, {
  3.680958537939199*^9, 3.6809585745519333`*^9}, {3.680959985929632*^9, 
  3.680960010571405*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"DATA", "[", 
   RowBox[{"[", "\"\<trainLabel\>\"", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.680958577011922*^9, 3.6809585829052887`*^9}, {
  3.680960020430347*^9, 3.680960037631501*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.6809585835600853`*^9, 3.6809599739415283`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"training", " ", "=", " ", 
  RowBox[{
   RowBox[{"DATA", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68095858604887*^9, 3.680958608840844*^9}, {
  3.6809601279973307`*^9, 3.6809601293568277`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.25094397308913846`", ",", "0.2638776553765723`", ",", 
             "0.23525621904996974`", ",", "0.3267009170815945`", ",", 
             "0.36227345358035246`", ",", "0.454084757421692`", ",", 
             "0.21260221587932968`", ",", "0.3724367750178997`", ",", 
             "0.368493973389564`"}], "}"}], ",", 
           TemplateBox[{"88378"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"0.45227748195453704`", ",", "0.4405771550602709`", ",", 
             TemplateBox[{"5"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, 
                FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                RoundingRadius -> 7]& )], ",", "0.440440390702832`", ",", 
             "0.4953900728732699`"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{91., {3., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{81., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 23807589926713275790, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{91., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 23807589926713275790, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{69., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 23807589926713275790, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{124., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[11]]], "Output",
 CellChangeTimes->{3.680958612608285*^9, 3.6809601344209623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "training", "]"}]], "Input",
 CellChangeTimes->{{3.6809586158389482`*^9, 3.680958619829338*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"88380", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.680958620480535*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainLabel", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DATA", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.680958653360662*^9, 3.6809587055842333`*^9}, {
  3.680960144565123*^9, 3.680960154116589*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "1", ",", "6", ",", "2", ",", "2", ",", "5", ",", "3", ",", "5", 
           ",", "2", ",", "6", ",", "6", ",", "5", ",", "2", ",", "2", ",", 
           "2", ",", "2", ",", "6", ",", "6", ",", "2", ",", "2", ",", "6", 
           ",", "5", ",", "6", ",", "3", ",", "4", ",", "3", ",", "3", ",", 
           "4", ",", "3", ",", "3", ",", "2", ",", "5", ",", "4", ",", "6", 
           ",", "1", ",", "2", ",", "3", ",", "6", ",", "3", ",", "6", ",", 
           "6", ",", "3", ",", "3", ",", "6", ",", "2", ",", "5", ",", "3", 
           ",", "4", ",", "1", ",", "5", ",", "4", ",", "2", ",", "6", ",", 
           "2", ",", "1", ",", "3", ",", "3", ",", "2", ",", "3", ",", "6", 
           ",", "5", ",", "2", ",", "3", ",", "3", ",", "2", ",", "6", ",", 
           "5", ",", "6", ",", "6", ",", "5", ",", "2", ",", "6", ",", "6", 
           ",", "2", ",", 
           TemplateBox[{"88234"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", "4", ",", 
           "6", ",", "5", ",", "2", ",", "2", ",", "5", ",", "3", ",", "5", 
           ",", "5", ",", "3", ",", "2", ",", "2", ",", "6", ",", "1", ",", 
           "2", ",", "3", ",", "3", ",", "5", ",", "2", ",", "6", ",", "1", 
           ",", "3", ",", "2", ",", "6", ",", "2", ",", "2", ",", "6", ",", 
           "2", ",", "2", ",", "3", ",", "3", ",", "3", ",", "4", ",", "3", 
           ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "4", ",", 
           "1", ",", "3", ",", "4", ",", "5", ",", "2", ",", "5", ",", "2", 
           ",", "2", ",", "2", ",", "2", ",", "5", ",", "4", ",", "4", ",", 
           "4", ",", "6", ",", "5", ",", "6", ",", "3", ",", "6", ",", "4", 
           ",", "5", ",", "2", ",", "2", ",", "2", ",", "6", ",", "6", ",", 
           "4", ",", "5", ",", "2", ",", "5", ",", "6", ",", "3", ",", "2"}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{91., {3., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{81., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 13, 23807589926713275790, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{91., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 13, 23807589926713275790, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{69., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 13, 23807589926713275790, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{124., {0., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[13]]], "Output",
 CellChangeTimes->{{3.680958659240479*^9, 3.680958707079649*^9}, {
  3.6809601488030977`*^9, 3.680960155421112*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "trainLabel", "]"}]], "Input",
 CellChangeTimes->{{3.680958664466305*^9, 3.68095866900412*^9}}],

Cell[BoxData[
 RowBox[{"{", "88380", "}"}]], "Output",
 CellChangeTimes->{{3.6809586693382387`*^9, 3.6809587091438217`*^9}, 
   3.680960159638451*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"testing", " ", "=", " ", 
  RowBox[{"DATA", "[", 
   RowBox[{
    RowBox[{"[", "3", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6809587128451853`*^9, 3.680958725160186*^9}, {
  3.68096016407701*^9, 3.68096016511683*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "testing", "]"}]], "Input",
 CellChangeTimes->{{3.680958730292865*^9, 3.680958733883986*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9820", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.6809587343075323`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testLabel", " ", "=", 
  RowBox[{"Flatten", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"DATA", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68095875023193*^9, 3.6809587751039267`*^9}, {
  3.680960171372583*^9, 3.6809601746842327`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "2", ",", "6", ",", "6", ",", "2", ",", "1", ",", "5", ",", "3", 
   ",", "4", ",", "2", ",", "5", ",", "3", ",", "3", ",", "6", ",", "2", ",", 
   "4", ",", "3", ",", "5", ",", "4", ",", "3", ",", "1", ",", "2", ",", "4", 
   ",", "1", ",", "2", ",", "2", ",", "6", ",", "5", ",", "3", ",", "4", ",", 
   "3", ",", "5", ",", "3", ",", "2", ",", "6", ",", "2", ",", "5", ",", "5", 
   ",", "5", ",", "2", ",", "6", ",", "3", ",", "1", ",", "2", ",", "5", ",", 
   "2", ",", "4", ",", "3", ",", "5", ",", "2", ",", "5", ",", "1", ",", "6", 
   ",", "2", ",", "3", ",", "5", ",", "3", ",", "2", ",", "5", ",", "2", ",", 
   "2", ",", "4", ",", "5", ",", "2", ",", "5", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "5", ",", "5", ",", "2", ",", "5", ",", "4", ",", "4", ",", 
   "5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "5", ",", "2", ",", "1", 
   ",", "2", ",", "1", ",", "1", ",", "6", ",", "5", ",", "4", ",", "3", ",", 
   "4", ",", "2", ",", "6", ",", "1", ",", "6", ",", "4", ",", "2", ",", "6", 
   ",", "4", ",", "2", ",", "4", ",", "2", ",", "4", ",", "5", ",", "6", ",", 
   "5", ",", "3", ",", "2", ",", "3", ",", "3", ",", "6", ",", "2", ",", "2", 
   ",", "3", ",", "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "6", ",", 
   "2", ",", "2", ",", "4", ",", "3", ",", "2", ",", "5", ",", "5", ",", "6", 
   ",", "3", ",", "2", ",", "2", ",", "3", ",", "2", ",", "4", ",", "2", ",", 
   "3", ",", "2", ",", "5", ",", "5", ",", "2", ",", "2", ",", "3", ",", "2", 
   ",", "6", ",", "5", ",", "5", ",", "3", ",", "3", ",", "3", ",", "2", ",", 
   "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "5", ",", "2", 
   ",", "5", ",", "2", ",", "5", ",", "2", ",", "2", ",", "5", ",", "5", ",", 
   "5", ",", "5", ",", "2", ",", "2", ",", "1", ",", "1", ",", "2", ",", "3", 
   ",", "5", ",", "6", ",", "3", ",", "2", ",", "4", ",", "3", ",", "6", ",", 
   "6", ",", "4", ",", "5", ",", "3", ",", "5", ",", "2", ",", "4", ",", "2", 
   ",", "6", ",", "2", ",", "5", ",", "1", ",", "2", ",", "2", ",", "4", ",", 
   "3", ",", "4", ",", "3", ",", "6", ",", "2", ",", "4", ",", "6", ",", "6", 
   ",", "4", ",", "2", ",", "5", ",", "2", ",", "2", ",", "5", ",", "2", ",", 
   "6", ",", "3", ",", "2", ",", "6", ",", "4", ",", "2", ",", "6", ",", "2", 
   ",", "5", ",", "3", ",", "6", ",", "2", ",", "3", ",", "3", ",", "2", ",", 
   "3", ",", "6", ",", "3", ",", "5", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "3", ",", "2", ",", "5", ",", "6", ",", "5", ",", "6", ",", "5", ",", 
   "5", ",", "4", ",", "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", 
   ",", "2", ",", "1", ",", "6", ",", "6", ",", "1", ",", "2", ",", "3", ",", 
   "2", ",", "2", ",", "6", ",", "3", ",", "2", ",", "2", ",", "5", ",", "2", 
   ",", "3", ",", "2", ",", "6", ",", "6", ",", "2", ",", "5", ",", "6", ",", 
   "2", ",", "6", ",", "5", ",", "2", ",", "6", ",", "4", ",", "3", ",", "6", 
   ",", "5", ",", "2", ",", "5", ",", "6", ",", "6", ",", "2", ",", "3", ",", 
   "2", ",", "3", ",", "2", ",", "2", ",", "6", ",", "3", ",", "4", ",", "2", 
   ",", "2", ",", "3", ",", "3", ",", "6", ",", "6", ",", "4", ",", "3", ",", 
   "3", ",", "4", ",", "5", ",", "1", ",", "2", ",", "2", ",", "6", ",", "6", 
   ",", "1", ",", "5", ",", "6", ",", "2", ",", "5", ",", "2", ",", "4", ",", 
   "2", ",", "1", ",", "5", ",", "5", ",", "3", ",", "5", ",", "5", ",", "6", 
   ",", "1", ",", "5", ",", "2", ",", "3", ",", "3", ",", "5", ",", "2", ",", 
   "2", ",", "2", ",", "5", ",", "3", ",", "2", ",", "3", ",", "5", ",", "2", 
   ",", "6", ",", "6", ",", "2", ",", "6", ",", "6", ",", "5", ",", "6", ",", 
   "6", ",", "4", ",", "6", ",", "3", ",", "4", ",", "4", ",", "6", ",", "3", 
   ",", "6", ",", "2", ",", "2", ",", "4", ",", "2", ",", "2", ",", "2", ",", 
   "5", ",", "5", ",", "5", ",", "2", ",", "3", ",", "6", ",", "4", ",", "4", 
   ",", "2", ",", "5", ",", "4", ",", "1", ",", "2", ",", "5", ",", "5", ",", 
   "2", ",", "6", ",", "2", ",", "2", ",", "3", ",", "5", ",", "6", ",", "2", 
   ",", "6", ",", "2", ",", "2", ",", "6", ",", "5", ",", "2", ",", "4", ",", 
   "2", ",", "6", ",", "5", ",", "3", ",", "6", ",", "2", ",", "6", ",", "5", 
   ",", "1", ",", "5", ",", "5", ",", "2", ",", "2", ",", "2", ",", "3", ",", 
   "1", ",", "5", ",", "2", ",", "2", ",", "3", ",", "2", ",", "6", ",", "1", 
   ",", "4", ",", "6", ",", "3", ",", "6", ",", "2", ",", "3", ",", "2", ",", 
   "1", ",", "3", ",", "2", ",", "1", ",", "2", ",", "6", ",", "3", ",", "6", 
   ",", "6", ",", "2", ",", "6", ",", "2", ",", "4", ",", "2", ",", "2", ",", 
   "2", ",", "3", ",", "2", ",", "3", ",", "1", ",", "2", ",", "5", ",", "2", 
   ",", "2", ",", "5", ",", "6", ",", "3", ",", "3", ",", "3", ",", "2", ",", 
   "4", ",", "6", ",", "3", ",", "5", ",", "3", ",", "3", ",", "2", ",", "2", 
   ",", "4", ",", "5", ",", "2", ",", "2", ",", "4", ",", "2", ",", "1", ",", 
   "5", ",", "3", ",", "3", ",", "6", ",", "5", ",", "4", ",", "6", ",", "5", 
   ",", "2", ",", "4", ",", "2", ",", "6", ",", "5", ",", "2", ",", "6", ",", 
   "5", ",", "2", ",", "3", ",", "3", ",", "5", ",", "2", ",", "5", ",", "5", 
   ",", "6", ",", "4", ",", "2", ",", "2", ",", "5", ",", "2", ",", "3", ",", 
   "1", ",", "2", ",", "1", ",", "3", ",", "4", ",", "2", ",", "1", ",", "3", 
   ",", "2", ",", "2", ",", "3", ",", "6", ",", "3", ",", "5", ",", "6", ",", 
   "6", ",", "3", ",", "6", ",", "3", ",", "3", ",", "2", ",", "2", ",", "2", 
   ",", "4", ",", "2", ",", "4", ",", "5", ",", "2", ",", "3", ",", "5", ",", 
   "2", ",", "4", ",", "4", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", 
   "2", ",", "4", ",", "4", ",", "6", ",", "5", ",", "6", ",", "5", ",", "4", 
   ",", "4", ",", "2", ",", "5", ",", "3", ",", "6", ",", "6", ",", "2", ",", 
   "6", ",", "6", ",", "6", ",", "2", ",", "2", ",", "3", ",", "3", ",", "6", 
   ",", "6", ",", "2", ",", "3", ",", "2", ",", "6", ",", "3", ",", "6", ",", 
   "2", ",", "3", ",", "5", ",", "6", ",", "2", ",", "2", ",", "6", ",", "5", 
   ",", "2", ",", "3", ",", "5", ",", "5", ",", "6", ",", "4", ",", "4", ",", 
   "1", ",", "2", ",", "5", ",", "6", ",", "6", ",", "4", ",", "1", ",", "6", 
   ",", "3", ",", "5", ",", "3", ",", "2", ",", "4", ",", "6", ",", "6", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "5", ",", "2", ",", "3", ",", "5", 
   ",", "5", ",", "2", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", 
   "2", ",", "1", ",", "5", ",", "1", ",", "4", ",", "5", ",", "6", ",", "6", 
   ",", "3", ",", "6", ",", "3", ",", "2", ",", "2", ",", "6", ",", "1", ",", 
   "5", ",", "4", ",", "5", ",", "2", ",", "2", ",", "5", ",", "3", ",", "1", 
   ",", "2", ",", "5", ",", "6", ",", "2", ",", "1", ",", "2", ",", "2", ",", 
   "3", ",", "2", ",", "5", ",", "3", ",", "2", ",", "2", ",", "2", ",", "5", 
   ",", "6", ",", "3", ",", "1", ",", "2", ",", "3", ",", "4", ",", "6", ",", 
   "2", ",", "4", ",", "2", ",", "2", ",", "6", ",", "2", ",", "3", ",", "6", 
   ",", "6", ",", "2", ",", "6", ",", "6", ",", "6", ",", "4", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "6", ",", "6", ",", "1", ",", "5", ",", "2", 
   ",", "2", ",", "5", ",", "3", ",", "2", ",", "4", ",", "6", ",", "5", ",", 
   "5", ",", "2", ",", "4", ",", "3", ",", "3", ",", "6", ",", "3", ",", "2", 
   ",", "6", ",", "5", ",", "4", ",", "4", ",", "2", ",", "6", ",", "1", ",", 
   "2", ",", "3", ",", "3", ",", "6", ",", "6", ",", "6", ",", "3", ",", "4", 
   ",", "5", ",", "2", ",", "5", ",", "4", ",", "6", ",", "6", ",", "3", ",", 
   "2", ",", "3", ",", "5", ",", "2", ",", "2", ",", "6", ",", "5", ",", "2", 
   ",", "4", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "6", ",", 
   "6", ",", "2", ",", "4", ",", "4", ",", "2", ",", "2", ",", "3", ",", "6", 
   ",", "2", ",", "2", ",", "3", ",", "5", ",", "3", ",", "3", ",", "6", ",", 
   "2", ",", "3", ",", "2", ",", "4", ",", "4", ",", "2", ",", "3", ",", "4", 
   ",", "2", ",", "2", ",", "3", ",", "5", ",", "3", ",", "1", ",", "5", ",", 
   "1", ",", "2", ",", "2", ",", "3", ",", "4", ",", "6", ",", "2", ",", "6", 
   ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "3", ",", 
   "2", ",", "3", ",", "5", ",", "2", ",", "2", ",", "3", ",", "5", ",", "2", 
   ",", "2", ",", "3", ",", "5", ",", "2", ",", "5", ",", "5", ",", "3", ",", 
   "5", ",", "1", ",", "5", ",", "6", ",", "5", ",", "1", ",", "4", ",", "3", 
   ",", "1", ",", "2", ",", "3", ",", "3", ",", "1", ",", "2", ",", "4", ",", 
   "6", ",", "4", ",", "3", ",", "1", ",", "4", ",", "3", ",", "5", ",", "6", 
   ",", "3", ",", "6", ",", "6", ",", "4", ",", "3", ",", "2", ",", "2", ",", 
   "5", ",", "2", ",", "2", ",", "3", ",", "5", ",", "3", ",", "4", ",", "6", 
   ",", "3", ",", "1", ",", "5", ",", "5", ",", "2", ",", "6", ",", "5", ",", 
   "1", ",", "5", ",", "1", ",", "2", ",", "2", ",", "6", ",", "6", ",", "6", 
   ",", "4", ",", "1", ",", "2", ",", "4", ",", "6", ",", "6", ",", "3", ",", 
   "5", ",", "5", ",", "6", ",", "4", ",", "3", ",", "6", ",", "2", ",", "2", 
   ",", "1", ",", "3", ",", "5", ",", "3", ",", "2", ",", "2", ",", "1", ",", 
   "6", ",", "5", ",", "6", ",", "2", ",", "2", ",", "3", ",", "6", ",", "5", 
   ",", "2", ",", "4", ",", "4", ",", "2", ",", "1", ",", "6", ",", "3", ",", 
   "5", ",", "2", ",", "3", ",", "2", ",", "5", ",", "6", ",", "5", ",", "2", 
   ",", "3", ",", "5", ",", "5", ",", "2", ",", "6", ",", "5", ",", "2", ",", 
   "6", ",", "6", ",", "1", ",", "4", ",", "5", ",", "3", ",", "2", ",", "3", 
   ",", "6", ",", "6", ",", "2", ",", "6", ",", "2", ",", "2", ",", "6", ",", 
   "2", ",", "5", ",", "4", ",", "2", ",", "3", ",", "6", ",", "5", ",", "1", 
   ",", "4", ",", "2", ",", "5", ",", "4", ",", "5", ",", "1", ",", "5", ",", 
   "5", ",", "5", ",", "2", ",", "3", ",", "6", ",", "3", ",", "2", ",", "6", 
   ",", "4", ",", "4", ",", "4", ",", "5", ",", "6", ",", "6", ",", "4", ",", 
   "3", ",", "2", ",", "6", ",", "3", ",", "2", ",", "4", ",", "6", ",", "2", 
   ",", "5", ",", "6", ",", "2", ",", "3", ",", "1", ",", "4", ",", "6", ",", 
   "2", ",", "4", ",", "1", ",", "3", ",", "5", ",", "5", ",", "3", ",", "6", 
   ",", "2", ",", "3", ",", "3", ",", "1", ",", "2", ",", "3", ",", "2", ",", 
   "2", ",", "6", ",", "6", ",", "3", ",", "5", ",", "5", ",", "6", ",", "3", 
   ",", "4", ",", "6", ",", "5", ",", "2", ",", "1", ",", "5", ",", "5", ",", 
   "3", ",", "6", ",", "4", ",", "2", ",", "2", ",", "1", ",", "5", ",", "6", 
   ",", "5", ",", "5", ",", "6", ",", "1", ",", "3", ",", "2", ",", "3", ",", 
   "3", ",", "5", ",", "3", ",", "5", ",", "2", ",", "3", ",", "5", ",", "5", 
   ",", "2", ",", "2", ",", "4", ",", "6", ",", "2", ",", "3", ",", "2", ",", 
   "4", ",", "1", ",", "5", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", 
   ",", "1", ",", "6", ",", "2", ",", "4", ",", "5", ",", "5", ",", "6", ",", 
   "5", ",", "6", ",", "2", ",", "2", ",", "5", ",", "6", ",", "2", ",", "5", 
   ",", "5", ",", "2", ",", "1", ",", "2", ",", "1", ",", "1", ",", "3", ",", 
   "2", ",", "5", ",", "2", ",", "1", ",", "4", ",", "5", ",", "2", ",", "2", 
   ",", "6", ",", "3", ",", "2", ",", "6", ",", "4", ",", "2", ",", "2", ",", 
   "3", ",", "6", ",", "6", ",", "4", ",", "1", ",", "5", ",", "3", ",", "4", 
   ",", "1", ",", "6", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "3", ",", "3", ",", "2", ",", "3", ",", "6", ",", "6", ",", "6", ",", "6", 
   ",", "3", ",", "6", ",", "5", ",", "6", ",", "5", ",", "2", ",", "3", ",", 
   "3", ",", "5", ",", "5", ",", "3", ",", "2", ",", "3", ",", "6", ",", "5", 
   ",", "6", ",", "2", ",", "5", ",", "2", ",", "4", ",", "6", ",", "2", ",", 
   "5", ",", "3", ",", "2", ",", "3", ",", "3", ",", "2", ",", "6", ",", "2", 
   ",", "2", ",", "2", ",", "6", ",", "2", ",", "2", ",", "3", ",", "2", ",", 
   "5", ",", "6", ",", "3", ",", "3", ",", "3", ",", "5", ",", "3", ",", "3", 
   ",", "2", ",", "3", ",", "1", ",", "6", ",", "2", ",", "4", ",", "5", ",", 
   "3", ",", "4", ",", "6", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", 
   ",", "5", ",", "2", ",", "3", ",", "2", ",", "4", ",", "2", ",", "5", ",", 
   "2", ",", "3", ",", "1", ",", "5", ",", "4", ",", "2", ",", "2", ",", "3", 
   ",", "3", ",", "4", ",", "2", ",", "2", ",", "1", ",", "2", ",", "5", ",", 
   "5", ",", "2", ",", "5", ",", "5", ",", "5", ",", "6", ",", "2", ",", "5", 
   ",", "5", ",", "2", ",", "5", ",", "5", ",", "2", ",", "5", ",", "6", ",", 
   "3", ",", "6", ",", "2", ",", "4", ",", "6", ",", "3", ",", "3", ",", "1", 
   ",", "5", ",", "6", ",", "6", ",", "2", ",", "4", ",", "6", ",", "3", ",", 
   "3", ",", "1", ",", "5", ",", "3", ",", "2", ",", "6", ",", "1", ",", "4", 
   ",", "1", ",", "6", ",", "1", ",", "4", ",", "1", ",", "4", ",", "2", ",", 
   "6", ",", "2", ",", "2", ",", "2", ",", "2", ",", "5", ",", "2", ",", "2", 
   ",", "4", ",", "4", ",", "3", ",", "1", ",", "2", ",", "5", ",", "5", ",", 
   "4", ",", "6", ",", "3", ",", "2", ",", "6", ",", "5", ",", "2", ",", "6", 
   ",", "3", ",", "3", ",", "2", ",", "2", ",", "5", ",", "5", ",", "3", ",", 
   "5", ",", "3", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "5", 
   ",", "2", ",", "6", ",", "4", ",", "2", ",", "1", ",", "3", ",", "5", ",", 
   "2", ",", "3", ",", "5", ",", "1", ",", "4", ",", "6", ",", "2", ",", "2", 
   ",", "5", ",", "3", ",", "3", ",", "3", ",", "2", ",", "6", ",", "5", ",", 
   "3", ",", "5", ",", "5", ",", "3", ",", "5", ",", "5", ",", "4", ",", "4", 
   ",", "2", ",", "5", ",", "6", ",", "6", ",", "6", ",", "5", ",", "3", ",", 
   "4", ",", "1", ",", "4", ",", "2", ",", "4", ",", "5", ",", "4", ",", "2", 
   ",", "2", ",", "2", ",", "5", ",", "6", ",", "2", ",", "2", ",", "5", ",", 
   "2", ",", "6", ",", "6", ",", "2", ",", "3", ",", "3", ",", "2", ",", "5", 
   ",", "3", ",", "5", ",", "4", ",", "3", ",", "5", ",", "6", ",", "2", ",", 
   "5", ",", "5", ",", "4", ",", "5", ",", "3", ",", "4", ",", "2", ",", "2", 
   ",", "5", ",", "2", ",", "2", ",", "6", ",", "4", ",", "1", ",", "4", ",", 
   "5", ",", "3", ",", "4", ",", "3", ",", "6", ",", "3", ",", "6", ",", "3", 
   ",", "3", ",", "3", ",", "2", ",", "6", ",", "3", ",", "3", ",", "6", ",", 
   "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "6", ",", "3", ",", "5", 
   ",", "2", ",", "2", ",", "5", ",", "2", ",", "5", ",", "5", ",", "5", ",", 
   "5", ",", "2", ",", "2", ",", "5", ",", "5", ",", "4", ",", "2", ",", "2", 
   ",", "3", ",", "2", ",", "5", ",", "1", ",", "2", ",", "2", ",", "5", ",", 
   "4", ",", "2", ",", "4", ",", "3", ",", "6", ",", "3", ",", "2", ",", "4", 
   ",", "2", ",", "5", ",", "6", ",", "3", ",", "1", ",", "2", ",", "5", ",", 
   "6", ",", "6", ",", "6", ",", "5", ",", "2", ",", "4", ",", "1", ",", "6", 
   ",", "6", ",", "1", ",", "2", ",", "5", ",", "3", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "3", ",", "2", ",", "4", ",", "5", ",", "3", ",", "5", 
   ",", "4", ",", "2", ",", "5", ",", "6", ",", "2", ",", "5", ",", "5", ",", 
   "3", ",", "5", ",", "1", ",", "5", ",", "2", ",", "2", ",", "3", ",", "3", 
   ",", "3", ",", "3", ",", "5", ",", "5", ",", "2", ",", "5", ",", "4", ",", 
   "4", ",", "2", ",", "1", ",", "3", ",", "1", ",", "4", ",", "6", ",", "1", 
   ",", "6", ",", "3", ",", "5", ",", "3", ",", "2", ",", "2", ",", "6", ",", 
   "1", ",", "1", ",", "6", ",", "6", ",", "5", ",", "3", ",", "5", ",", "3", 
   ",", "2", ",", "6", ",", "5", ",", "3", ",", "3", ",", "6", ",", "5", ",", 
   "4", ",", "2", ",", "4", ",", "3", ",", "2", ",", "3", ",", "6", ",", "2", 
   ",", "5", ",", "6", ",", "3", ",", "6", ",", "2", ",", "4", ",", "6", ",", 
   "3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "6", ",", "1", ",", "2", 
   ",", "3", ",", "1", ",", "4", ",", "3", ",", "3", ",", "4", ",", "2", ",", 
   "2", ",", "5", ",", "4", ",", "1", ",", "6", ",", "2", ",", "6", ",", "3", 
   ",", "3", ",", "5", ",", "3", ",", "3", ",", "3", ",", "5", ",", "2", ",", 
   "4", ",", "3", ",", "6", ",", "6", ",", "2", ",", "4", ",", "2", ",", "5", 
   ",", "2", ",", "3", ",", "6", ",", "2", ",", "1", ",", "5", ",", "2", ",", 
   "3", ",", "3", ",", "1", ",", "2", ",", "6", ",", "3", ",", "6", ",", "3", 
   ",", "3", ",", "2", ",", "2", ",", "4", ",", "6", ",", "4", ",", "2", ",", 
   "6", ",", "1", ",", "4", ",", "3", ",", "2", ",", "1", ",", "5", ",", "5", 
   ",", "5", ",", "2", ",", "3", ",", "6", ",", "2", ",", "3", ",", "4", ",", 
   "3", ",", "5", ",", "2", ",", "3", ",", "6", ",", "4", ",", "2", ",", "4", 
   ",", "5", ",", "2", ",", "2", ",", "3", ",", "5", ",", "6", ",", "2", ",", 
   "4", ",", "3", ",", "2", ",", "6", ",", "6", ",", "2", ",", "5", ",", "2", 
   ",", "2", ",", "6", ",", "3", ",", "3", ",", "5", ",", "4", ",", "1", ",", 
   "1", ",", "3", ",", "3", ",", "5", ",", "1", ",", "6", ",", "2", ",", "2", 
   ",", "2", ",", "3", ",", "2", ",", "5", ",", "3", ",", "2", ",", "5", ",", 
   "5", ",", "6", ",", "2", ",", "4", ",", "5", ",", "2", ",", "3", ",", "5", 
   ",", "3", ",", "3", ",", "6", ",", "5", ",", "2", ",", "5", ",", "3", ",", 
   "3", ",", "3", ",", "3", ",", "4", ",", "1", ",", "5", ",", "4", ",", "3", 
   ",", "3", ",", "3", ",", "3", ",", "6", ",", "1", ",", "3", ",", "3", ",", 
   "5", ",", "4", ",", "6", ",", "2", ",", "2", ",", "3", ",", "5", ",", "2", 
   ",", "2", ",", "3", ",", "2", ",", "5", ",", "3", ",", "2", ",", "2", ",", 
   "6", ",", "3", ",", "1", ",", "6", ",", "6", ",", "4", ",", "3", ",", "2", 
   ",", "6", ",", "1", ",", "5", ",", "2", ",", "6", ",", "2", ",", "4", ",", 
   "6", ",", "1", ",", "3", ",", "2", ",", "4", ",", "3", ",", "5", ",", "2", 
   ",", "1", ",", "3", ",", "5", ",", "2", ",", "1", ",", "2", ",", "5", ",", 
   "2", ",", "6", ",", "4", ",", "2", ",", "5", ",", "5", ",", "2", ",", "6", 
   ",", "3", ",", "2", ",", "6", ",", "2", ",", "5", ",", "6", ",", "3", ",", 
   "3", ",", "2", ",", "2", ",", "6", ",", "6", ",", "2", ",", "3", ",", "6", 
   ",", "2", ",", "5", ",", "2", ",", "2", ",", "3", ",", "3", ",", "6", ",", 
   "2", ",", "1", ",", "5", ",", "3", ",", "4", ",", "2", ",", "3", ",", "2", 
   ",", "4", ",", "3", ",", "2", ",", "5", ",", "6", ",", "5", ",", "2", ",", 
   "5", ",", "5", ",", "2", ",", "2", ",", "6", ",", "2", ",", "1", ",", "6", 
   ",", "2", ",", "5", ",", "6", ",", "6", ",", "4", ",", "3", ",", "5", ",", 
   "1", ",", "5", ",", "6", ",", "5", ",", "6", ",", "2", ",", "5", ",", "2", 
   ",", "6", ",", "5", ",", "3", ",", "3", ",", "5", ",", "1", ",", "6", ",", 
   "4", ",", "5", ",", "2", ",", "3", ",", "3", ",", "6", ",", "5", ",", "2", 
   ",", "2", ",", "2", ",", "6", ",", "1", ",", "5", ",", "3", ",", "2", ",", 
   "3", ",", "2", ",", "5", ",", "2", ",", "2", ",", "4", ",", "4", ",", "6", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "6", ",", "1", ",", 
   "6", ",", "2", ",", "5", ",", "3", ",", "3", ",", "5", ",", "2", ",", "5", 
   ",", "6", ",", "2", ",", "5", ",", "2", ",", "5", ",", "2", ",", "1", ",", 
   "3", ",", "6", ",", "5", ",", "2", ",", "3", ",", "4", ",", "4", ",", "2", 
   ",", "6", ",", "6", ",", "5", ",", "4", ",", "6", ",", "1", ",", "5", ",", 
   "6", ",", "6", ",", "2", ",", "3", ",", "3", ",", "4", ",", "2", ",", "3", 
   ",", "5", ",", "3", ",", "3", ",", "2", ",", "1", ",", "2", ",", "3", ",", 
   "3", ",", "2", ",", "6", ",", "1", ",", "5", ",", "4", ",", "2", ",", "3", 
   ",", "1", ",", "2", ",", "6", ",", "3", ",", "4", ",", "5", ",", "2", ",", 
   "6", ",", "2", ",", "5", ",", "1", ",", "3", ",", "5", ",", "1", ",", "2", 
   ",", "6", ",", "6", ",", "2", ",", "6", ",", "2", ",", "4", ",", "2", ",", 
   "4", ",", "6", ",", "5", ",", "6", ",", "2", ",", "4", ",", "5", ",", "2", 
   ",", "3", ",", "6", ",", "6", ",", "2", ",", "4", ",", "4", ",", "3", ",", 
   "6", ",", "2", ",", "4", ",", "2", ",", "2", ",", "6", ",", "2", ",", "3", 
   ",", "1", ",", "3", ",", "6", ",", "4", ",", "6", ",", "2", ",", "3", ",", 
   "6", ",", "6", ",", "3", ",", "2", ",", "6", ",", "2", ",", "1", ",", "6", 
   ",", "2", ",", "2", ",", "5", ",", "2", ",", "2", ",", "5", ",", "2", ",", 
   "6", ",", "2", ",", "6", ",", "6", ",", "6", ",", "2", ",", "3", ",", "2", 
   ",", "3", ",", "5", ",", "3", ",", "5", ",", "5", ",", "4", ",", "2", ",", 
   "3", ",", "4", ",", "4", ",", "6", ",", "4", ",", "5", ",", "6", ",", "3", 
   ",", "5", ",", "6", ",", "4", ",", "4", ",", "4", ",", "5", ",", "3", ",", 
   "4", ",", "4", ",", "5", ",", "6", ",", "2", ",", "2", ",", "5", ",", "6", 
   ",", "1", ",", "3", ",", "6", ",", "5", ",", "6", ",", "5", ",", "6", ",", 
   "6", ",", "2", ",", "1", ",", "5", ",", "5", ",", "5", ",", "5", ",", "3", 
   ",", "2", ",", "2", ",", "1", ",", "2", ",", "2", ",", "5", ",", "6", ",", 
   "5", ",", "2", ",", "3", ",", "1", ",", "6", ",", "5", ",", "2", ",", "2", 
   ",", "2", ",", "4", ",", "4", ",", "5", ",", "2", ",", "3", ",", "2", ",", 
   "2", ",", "2", ",", "1", ",", "2", ",", "2", ",", "6", ",", "6", ",", "3", 
   ",", "6", ",", "3", ",", "3", ",", "2", ",", "5", ",", "1", ",", "3", ",", 
   "6", ",", "2", ",", "2", ",", "6", ",", "2", ",", "3", ",", "5", ",", "5", 
   ",", "3", ",", "2", ",", "4", ",", "3", ",", "4", ",", "2", ",", "6", ",", 
   "4", ",", "5", ",", "5", ",", "5", ",", "2", ",", "1", ",", "6", ",", "1", 
   ",", "4", ",", "6", ",", "5", ",", "4", ",", "3", ",", "5", ",", "2", ",", 
   "5", ",", "5", ",", "6", ",", "5", ",", "3", ",", "3", ",", "4", ",", "5", 
   ",", "6", ",", "2", ",", "5", ",", "2", ",", "4", ",", "5", ",", "4", ",", 
   "3", ",", "4", ",", "1", ",", "3", ",", "2", ",", "2", ",", "6", ",", "6", 
   ",", "2", ",", "2", ",", "2", ",", "5", ",", "5", ",", "5", ",", "2", ",", 
   "5", ",", "3", ",", "5", ",", "5", ",", "2", ",", "3", ",", "4", ",", "6", 
   ",", "2", ",", "2", ",", "2", ",", "3", ",", "4", ",", "6", ",", "6", ",", 
   "2", ",", "2", ",", "6", ",", "5", ",", "2", ",", "2", ",", "2", ",", "6", 
   ",", "2", ",", "4", ",", "2", ",", "1", ",", "2", ",", "3", ",", "3", ",", 
   "2", ",", "4", ",", "2", ",", "2", ",", "5", ",", "3", ",", "2", ",", "1", 
   ",", "2", ",", "5", ",", "6", ",", "2", ",", "3", ",", "4", ",", "5", ",", 
   "3", ",", "6", ",", "3", ",", "3", ",", "3", ",", "5", ",", "6", ",", "2", 
   ",", "3", ",", "3", ",", "2", ",", "1", ",", "2", ",", "2", ",", "6", ",", 
   "5", ",", "6", ",", "4", ",", "6", ",", "4", ",", "4", ",", "6", ",", "3", 
   ",", "6", ",", "5", ",", "2", ",", "3", ",", "6", ",", "2", ",", "6", ",", 
   "5", ",", "6", ",", "1", ",", "3", ",", "1", ",", "5", ",", "2", ",", "3", 
   ",", "2", ",", "6", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "1", ",", "4", ",", "5", ",", "6", ",", "3", 
   ",", "6", ",", "5", ",", "2", ",", "3", ",", "6", ",", "4", ",", "1", ",", 
   "4", ",", "3", ",", "2", ",", "6", ",", "4", ",", "3", ",", "2", ",", "6", 
   ",", "3", ",", "4", ",", "3", ",", "2", ",", "1", ",", "3", ",", "2", ",", 
   "1", ",", "5", ",", "2", ",", "3", ",", "5", ",", "5", ",", "3", ",", "2", 
   ",", "5", ",", "6", ",", "2", ",", "2", ",", "6", ",", "5", ",", "2", ",", 
   "5", ",", "1", ",", "2", ",", "2", ",", "2", ",", "6", ",", "3", ",", "5", 
   ",", "2", ",", "2", ",", "2", ",", "6", ",", "3", ",", "6", ",", "5", ",", 
   "3", ",", "1", ",", "5", ",", "2", ",", "6", ",", "2", ",", "3", ",", "6", 
   ",", "5", ",", "4", ",", "5", ",", "2", ",", "6", ",", "1", ",", "3", ",", 
   "5", ",", "6", ",", "3", ",", "5", ",", "2", ",", "4", ",", "4", ",", "5", 
   ",", "3", ",", "3", ",", "1", ",", "2", ",", "2", ",", "4", ",", "2", ",", 
   "6", ",", "4", ",", "3", ",", "2", ",", "1", ",", "3", ",", "6", ",", "4", 
   ",", "6", ",", "5", ",", "6", ",", "5", ",", "3", ",", "2", ",", "3", ",", 
   "6", ",", "5", ",", "2", ",", "2", ",", "2", ",", "6", ",", "6", ",", "5", 
   ",", "1", ",", "4", ",", "3", ",", "2", ",", "6", ",", "1", ",", "5", ",", 
   "2", ",", "5", ",", "2", ",", "3", ",", "4", ",", "6", ",", "5", ",", "6", 
   ",", "2", ",", "3", ",", "1", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
   "1", ",", "6", ",", "4", ",", "2", ",", "3", ",", "6", ",", "2", ",", "6", 
   ",", "5", ",", "5", ",", "4", ",", "4", ",", "3", ",", "4", ",", "2", ",", 
   "1", ",", "5", ",", "6", ",", "6", ",", "1", ",", "6", ",", "3", ",", "2", 
   ",", "2", ",", "2", ",", "4", ",", "5", ",", "5", ",", "2", ",", "2", ",", 
   "5", ",", "3", ",", "2", ",", "5", ",", "6", ",", "1", ",", "2", ",", "2", 
   ",", "4", ",", "6", ",", "2", ",", "1", ",", "5", ",", "3", ",", "3", ",", 
   "6", ",", "6", ",", "3", ",", "6", ",", "6", ",", "2", ",", "5", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "5", ",", 
   "6", ",", "5", ",", "3", ",", "5", ",", "5", ",", "2", ",", "2", ",", "2", 
   ",", "3", ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "3", ",", 
   "6", ",", "3", ",", "4", ",", "5", ",", "4", ",", "1", ",", "5", ",", "1", 
   ",", "3", ",", "1", ",", "5", ",", "5", ",", "6", ",", "5", ",", "5", ",", 
   "6", ",", "5", ",", "1", ",", "3", ",", "3", ",", "5", ",", "6", ",", "2", 
   ",", "2", ",", "5", ",", "3", ",", "3", ",", "6", ",", "2", ",", "4", ",", 
   "2", ",", "2", ",", "6", ",", "2", ",", "5", ",", "2", ",", "6", ",", "6", 
   ",", "2", ",", "2", ",", "3", ",", "3", ",", "5", ",", "5", ",", "2", ",", 
   "1", ",", "2", ",", "3", ",", "5", ",", "3", ",", "3", ",", "2", ",", "4", 
   ",", "1", ",", "2", ",", "5", ",", "6", ",", "6", ",", "2", ",", "6", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "4", ",", "5", ",", "6", 
   ",", "2", ",", "2", ",", "5", ",", "4", ",", "3", ",", "2", ",", "3", ",", 
   "2", ",", "4", ",", "4", ",", "3", ",", "2", ",", "2", ",", "2", ",", "3", 
   ",", "5", ",", "4", ",", "3", ",", "5", ",", "5", ",", "6", ",", "1", ",", 
   "4", ",", "2", ",", "6", ",", "5", ",", "2", ",", "2", ",", "6", ",", "2", 
   ",", "5", ",", "2", ",", "3", ",", "3", ",", "5", ",", "2", ",", "4", ",", 
   "1", ",", "3", ",", "2", ",", "2", ",", "4", ",", "5", ",", "3", ",", "4", 
   ",", "5", ",", "2", ",", "5", ",", "1", ",", "5", ",", "5", ",", "3", ",", 
   "5", ",", "1", ",", "6", ",", "5", ",", "2", ",", "6", ",", "5", ",", "3", 
   ",", "6", ",", "3", ",", "6", ",", "2", ",", "2", ",", "5", ",", "2", ",", 
   "6", ",", "3", ",", "2", ",", "3", ",", "6", ",", "6", ",", "4", ",", "2", 
   ",", "2", ",", "6", ",", "3", ",", "4", ",", "5", ",", "2", ",", "5", ",", 
   "3", ",", "4", ",", "3", ",", "2", ",", "2", ",", "2", ",", "6", ",", "2", 
   ",", "6", ",", "6", ",", "5", ",", "6", ",", "6", ",", "3", ",", "2", ",", 
   "3", ",", "6", ",", "2", ",", "6", ",", "2", ",", "2", ",", "6", ",", "5", 
   ",", "5", ",", "6", ",", "2", ",", "2", ",", "6", ",", "5", ",", "1", ",", 
   "1", ",", "6", ",", "3", ",", "4", ",", "2", ",", "5", ",", "4", ",", "5", 
   ",", "6", ",", "4", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", 
   "3", ",", "2", ",", "2", ",", "3", ",", "6", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "3", ",", "2", ",", "3", ",", "6", ",", "1", ",", "2", ",", 
   "6", ",", "5", ",", "3", ",", "4", ",", "5", ",", "2", ",", "6", ",", "2", 
   ",", "6", ",", "4", ",", "5", ",", "3", ",", "2", ",", "5", ",", "6", ",", 
   "5", ",", "4", ",", "6", ",", "2", ",", "3", ",", "3", ",", "5", ",", "3", 
   ",", "4", ",", "5", ",", "3", ",", "2", ",", "2", ",", "2", ",", "3", ",", 
   "3", ",", "5", ",", "3", ",", "3", ",", "5", ",", "3", ",", "3", ",", "5", 
   ",", "3", ",", "5", ",", "5", ",", "6", ",", "5", ",", "2", ",", "1", ",", 
   "2", ",", "6", ",", "3", ",", "2", ",", "3", ",", "3", ",", "6", ",", "2", 
   ",", "6", ",", "2", ",", "2", ",", "3", ",", "2", ",", "3", ",", "6", ",", 
   "3", ",", "5", ",", "2", ",", "2", ",", "2", ",", "6", ",", "2", ",", "3", 
   ",", "2", ",", "6", ",", "2", ",", "5", ",", "4", ",", "2", ",", "5", ",", 
   "3", ",", "2", ",", "2", ",", "2", ",", "5", ",", "6", ",", "2", ",", "4", 
   ",", "3", ",", "2", ",", "2", ",", "6", ",", "5", ",", "3", ",", "2", ",", 
   "3", ",", "6", ",", "4", ",", "2", ",", "2", ",", "2", ",", "1", ",", "2", 
   ",", "1", ",", "5", ",", "5", ",", "3", ",", "2", ",", "4", ",", "1", ",", 
   "2", ",", "6", ",", "2", ",", "5", ",", "4", ",", "3", ",", "2", ",", "3", 
   ",", "6", ",", "1", ",", "3", ",", "2", ",", "3", ",", "1", ",", "3", ",", 
   "5", ",", "6", ",", "2", ",", "2", ",", "6", ",", "4", ",", "4", ",", "5", 
   ",", "5", ",", "2", ",", "5", ",", "3", ",", "4", ",", "4", ",", "1", ",", 
   "2", ",", "3", ",", "4", ",", "2", ",", "2", ",", "6", ",", "4", ",", "6", 
   ",", "2", ",", "5", ",", "5", ",", "3", ",", "2", ",", "4", ",", "3", ",", 
   "2", ",", "4", ",", "2", ",", "6", ",", "2", ",", "5", ",", "3", ",", "5", 
   ",", "3", ",", "2", ",", "3", ",", "2", ",", "6", ",", "2", ",", "5", ",", 
   "2", ",", "3", ",", "3", ",", "5", ",", "4", ",", "3", ",", "3", ",", "5", 
   ",", "2", ",", "5", ",", "4", ",", "2", ",", "4", ",", "6", ",", "3", ",", 
   "6", ",", "6", ",", "1", ",", "1", ",", "2", ",", "6", ",", "2", ",", "5", 
   ",", "3", ",", "5", ",", "2", ",", "3", ",", "2", ",", "6", ",", "2", ",", 
   "6", ",", "2", ",", "6", ",", "5", ",", "6", ",", "3", ",", "2", ",", "5", 
   ",", "3", ",", "4", ",", "5", ",", "2", ",", "6", ",", "1", ",", "5", ",", 
   "6", ",", "2", ",", "4", ",", "5", ",", "3", ",", "2", ",", "3", ",", "3", 
   ",", "3", ",", "2", ",", "2", ",", "2", ",", "5", ",", "2", ",", "6", ",", 
   "2", ",", "2", ",", "4", ",", "6", ",", "6", ",", "6", ",", "5", ",", "2", 
   ",", "5", ",", "6", ",", "3", ",", "3", ",", "4", ",", "2", ",", "5", ",", 
   "3", ",", "4", ",", "5", ",", "2", ",", "6", ",", "1", ",", "2", ",", "3", 
   ",", "2", ",", "2", ",", "6", ",", "3", ",", "5", ",", "3", ",", "5", ",", 
   "3", ",", "4", ",", "3", ",", "3", ",", "2", ",", "2", ",", "6", ",", "3", 
   ",", "2", ",", "3", ",", "6", ",", "5", ",", "2", ",", "2", ",", "6", ",", 
   "5", ",", "6", ",", "2", ",", "2", ",", "5", ",", "1", ",", "4", ",", "2", 
   ",", "3", ",", "2", ",", "5", ",", "4", ",", "3", ",", "3", ",", "2", ",", 
   "2", ",", "2", ",", "6", ",", "3", ",", "2", ",", "2", ",", "2", ",", "6", 
   ",", "1", ",", "2", ",", "2", ",", "5", ",", "3", ",", "1", ",", "2", ",", 
   "2", ",", "2", ",", "6", ",", "5", ",", "4", ",", "6", ",", "2", ",", "2", 
   ",", "6", ",", "5", ",", "3", ",", "2", ",", "5", ",", "4", ",", "3", ",", 
   "2", ",", "3", ",", "6", ",", "1", ",", "2", ",", "3", ",", "2", ",", "4", 
   ",", "4", ",", "1", ",", "2", ",", "2", ",", "5", ",", "2", ",", "6", ",", 
   "3", ",", "4", ",", "2", ",", "6", ",", "2", ",", "1", ",", "3", ",", "6", 
   ",", "2", ",", "5", ",", "1", ",", "3", ",", "6", ",", "5", ",", "2", ",", 
   "6", ",", "2", ",", "3", ",", "5", ",", "4", ",", "2", ",", "2", ",", "5", 
   ",", "3", ",", "3", ",", "5", ",", "5", ",", "2", ",", "1", ",", "5", ",", 
   "6", ",", "2", ",", "3", ",", "2", ",", "3", ",", "4", ",", "6", ",", "5", 
   ",", "5", ",", "5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "5", ",", 
   "5", ",", "2", ",", "5", ",", "6", ",", "5", ",", "5", ",", "6", ",", "6", 
   ",", "2", ",", "1", ",", "5", ",", "2", ",", "2", ",", "6", ",", "6", ",", 
   "3", ",", "2", ",", "4", ",", "6", ",", "1", ",", "5", ",", "4", ",", "2", 
   ",", "2", ",", "1", ",", "6", ",", "3", ",", "2", ",", "5", ",", "2", ",", 
   "2", ",", "5", ",", "6", ",", "2", ",", "3", ",", "2", ",", "3", ",", "4", 
   ",", "3", ",", "6", ",", "5", ",", "2", ",", "3", ",", "1", ",", "6", ",", 
   "2", ",", "6", ",", "2", ",", "3", ",", "2", ",", "2", ",", "6", ",", "2", 
   ",", "3", ",", "5", ",", "4", ",", "1", ",", "3", ",", "2", ",", "3", ",", 
   "4", ",", "2", ",", "5", ",", "2", ",", "6", ",", "2", ",", "1", ",", "4", 
   ",", "1", ",", "6", ",", "1", ",", "2", ",", "5", ",", "4", ",", "5", ",", 
   "5", ",", "2", ",", "1", ",", "1", ",", "3", ",", "2", ",", "2", ",", "6", 
   ",", "3", ",", "5", ",", "3", ",", "2", ",", "5", ",", "6", ",", "5", ",", 
   "1", ",", "6", ",", "3", ",", "6", ",", "3", ",", "3", ",", "3", ",", "2", 
   ",", "4", ",", "5", ",", "2", ",", "4", ",", "2", ",", "5", ",", "3", ",", 
   "3", ",", "2", ",", "2", ",", "2", ",", "6", ",", "4", ",", "3", ",", "2", 
   ",", "1", ",", "6", ",", "1", ",", "6", ",", "1", ",", "4", ",", "4", ",", 
   "4", ",", "2", ",", "1", ",", "6", ",", "2", ",", "3", ",", "3", ",", "3", 
   ",", "2", ",", "5", ",", "2", ",", "5", ",", "4", ",", "5", ",", "3", ",", 
   "4", ",", "2", ",", "2", ",", "5", ",", "6", ",", "2", ",", "4", ",", "3", 
   ",", "1", ",", "2", ",", "6", ",", "2", ",", "2", ",", "2", ",", "6", ",", 
   "2", ",", "1", ",", "2", ",", "4", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "4", ",", "2", ",", "4", ",", "2", ",", "3", ",", "3", ",", "2", ",", 
   "2", ",", "3", ",", "3", ",", "6", ",", "5", ",", "2", ",", "3", ",", "2", 
   ",", "3", ",", "3", ",", "6", ",", "2", ",", "2", ",", "6", ",", "4", ",", 
   "4", ",", "6", ",", "3", ",", "6", ",", "6", ",", "1", ",", "2", ",", "6", 
   ",", "2", ",", "5", ",", "5", ",", "5", ",", "6", ",", "2", ",", "6", ",", 
   "5", ",", "2", ",", "5", ",", "2", ",", "2", ",", "1", ",", "3", ",", "3", 
   ",", "3", ",", "5", ",", "2", ",", "1", ",", "3", ",", "6", ",", "2", ",", 
   "2", ",", "2", ",", "6", ",", "4", ",", "2", ",", "1", ",", "2", ",", "2", 
   ",", "5", ",", "5", ",", "2", ",", "2", ",", "3", ",", "4", ",", "6", ",", 
   "5", ",", "3", ",", "3", ",", "3", ",", "5", ",", "2", ",", "2", ",", "6", 
   ",", "6", ",", "3", ",", "2", ",", "3", ",", "6", ",", "5", ",", "2", ",", 
   "6", ",", "6", ",", "1", ",", "2", ",", "3", ",", "6", ",", "2", ",", "5", 
   ",", "6", ",", "2", ",", "2", ",", "5", ",", "2", ",", "4", ",", "3", ",", 
   "2", ",", "1", ",", "4", ",", "6", ",", "6", ",", "3", ",", "2", ",", "2", 
   ",", "1", ",", "3", ",", "6", ",", "6", ",", "1", ",", "6", ",", "2", ",", 
   "6", ",", "3", ",", "5", ",", "6", ",", "2", ",", "6", ",", "2", ",", "6", 
   ",", "3", ",", "4", ",", "2", ",", "4", ",", "1", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "5", ",", "5", ",", "6", ",", "2", ",", "2", ",", "6", 
   ",", "2", ",", "5", ",", "6", ",", "6", ",", "6", ",", "4", ",", "3", ",", 
   "3", ",", "2", ",", "5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "3", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "3", ",", 
   "3", ",", "6", ",", "3", ",", "3", ",", "4", ",", "3", ",", "3", ",", "1", 
   ",", "3", ",", "6", ",", "5", ",", "2", ",", "5", ",", "4", ",", "2", ",", 
   "1", ",", "2", ",", "2", ",", "3", ",", "6", ",", "2", ",", "2", ",", "2", 
   ",", "3", ",", "2", ",", "2", ",", "5", ",", "6", ",", "2", ",", "6", ",", 
   "3", ",", "3", ",", "3", ",", "3", ",", "5", ",", "4", ",", "3", ",", "5", 
   ",", "2", ",", "2", ",", "5", ",", "3", ",", "5", ",", "2", ",", "2", ",", 
   "3", ",", "3", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "6", 
   ",", "3", ",", "5", ",", "6", ",", "5", ",", "3", ",", "1", ",", "6", ",", 
   "5", ",", "6", ",", "2", ",", "1", ",", "2", ",", "2", ",", "6", ",", "3", 
   ",", "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", 
   "6", ",", "3", ",", "2", ",", "5", ",", "2", ",", "5", ",", "5", ",", "2", 
   ",", "1", ",", "6", ",", "4", ",", "4", ",", "6", ",", "3", ",", "6", ",", 
   "2", ",", "5", ",", "3", ",", "5", ",", "1", ",", "3", ",", "2", ",", "5", 
   ",", "3", ",", "6", ",", "4", ",", "5", ",", "4", ",", "4", ",", "5", ",", 
   "1", ",", "1", ",", "3", ",", "6", ",", "6", ",", "3", ",", "4", ",", "3", 
   ",", "3", ",", "3", ",", "2", ",", "6", ",", "3", ",", "1", ",", "6", ",", 
   "1", ",", "5", ",", "4", ",", "6", ",", "2", ",", "4", ",", "6", ",", "2", 
   ",", "6", ",", "2", ",", "3", ",", "5", ",", "2", ",", "2", ",", "5", ",", 
   "2", ",", "6", ",", "6", ",", "2", ",", "3", ",", "5", ",", "3", ",", "2", 
   ",", "3", ",", "3", ",", "6", ",", "2", ",", "6", ",", "3", ",", "5", ",", 
   "5", ",", "6", ",", "1", ",", "5", ",", "6", ",", "1", ",", "6", ",", "2", 
   ",", "1", ",", "3", ",", "4", ",", "3", ",", "2", ",", "5", ",", "3", ",", 
   "5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "5", 
   ",", "4", ",", "2", ",", "2", ",", "2", ",", "1", ",", "3", ",", "2", ",", 
   "2", ",", "6", ",", "5", ",", "1", ",", "4", ",", "3", ",", "2", ",", "4", 
   ",", "5", ",", "1", ",", "1", ",", "2", ",", "5", ",", "1", ",", "6", ",", 
   "3", ",", "2", ",", "3", ",", "2", ",", "3", ",", "6", ",", "5", ",", "6", 
   ",", "3", ",", "6", ",", "6", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "5", ",", "2", ",", "6", ",", "4", ",", "2", ",", "5", ",", "1", ",", "3", 
   ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "4", ",", "5", ",", 
   "3", ",", "2", ",", "2", ",", "5", ",", "1", ",", "1", ",", "2", ",", "2", 
   ",", "5", ",", "5", ",", "2", ",", "2", ",", "5", ",", "2", ",", "1", ",", 
   "5", ",", "6", ",", "3", ",", "2", ",", "2", ",", "6", ",", "1", ",", "6", 
   ",", "6", ",", "5", ",", "5", ",", "2", ",", "4", ",", "4", ",", "2", ",", 
   "5", ",", "3", ",", "3", ",", "4", ",", "1", ",", "4", ",", "1", ",", "2", 
   ",", "2", ",", "6", ",", "3", ",", "5", ",", "6", ",", "4", ",", "2", ",", 
   "6", ",", "4", ",", "4", ",", "3", ",", "5", ",", "5", ",", "1", ",", "6", 
   ",", "3", ",", "3", ",", "5", ",", "3", ",", "4", ",", "6", ",", "3", ",", 
   "6", ",", "4", ",", "2", ",", "1", ",", "2", ",", "2", ",", "6", ",", "6", 
   ",", "3", ",", "6", ",", "6", ",", "4", ",", "2", ",", "2", ",", "2", ",", 
   "3", ",", "4", ",", "4", ",", "2", ",", "5", ",", "6", ",", "3", ",", "3", 
   ",", "1", ",", "2", ",", "5", ",", "6", ",", "6", ",", "3", ",", "2", ",", 
   "3", ",", "1", ",", "3", ",", "5", ",", "2", ",", "5", ",", "4", ",", "5", 
   ",", "5", ",", "4", ",", "6", ",", "3", ",", "2", ",", "5", ",", "2", ",", 
   "2", ",", "6", ",", "2", ",", "3", ",", "3", ",", "1", ",", "2", ",", "5", 
   ",", "3", ",", "5", ",", "1", ",", "5", ",", "3", ",", "1", ",", "1", ",", 
   "3", ",", "3", ",", "2", ",", "2", ",", "4", ",", "1", ",", "3", ",", "2", 
   ",", "2", ",", "6", ",", "1", ",", "2", ",", "5", ",", "5", ",", "4", ",", 
   "3", ",", "1", ",", "3", ",", "4", ",", "1", ",", "2", ",", "3", ",", "6", 
   ",", "6", ",", "2", ",", "2", ",", "3", ",", "6", ",", "1", ",", "6", ",", 
   "6", ",", "5", ",", "2", ",", "6", ",", "1", ",", "2", ",", "2", ",", "1", 
   ",", "3", ",", "6", ",", "5", ",", "2", ",", "4", ",", "4", ",", "1", ",", 
   "2", ",", "3", ",", "6", ",", "5", ",", "2", ",", "3", ",", "3", ",", "2", 
   ",", "6", ",", "5", ",", "2", ",", "4", ",", "3", ",", "3", ",", "2", ",", 
   "2", ",", "6", ",", "2", ",", "2", ",", "2", ",", "6", ",", "6", ",", "4", 
   ",", "5", ",", "1", ",", "3", ",", "2", ",", "6", ",", "3", ",", "3", ",", 
   "3", ",", "2", ",", "1", ",", "1", ",", "5", ",", "5", ",", "2", ",", "6", 
   ",", "5", ",", "3", ",", "5", ",", "3", ",", "5", ",", "2", ",", "2", ",", 
   "6", ",", "3", ",", "2", ",", "5", ",", "3", ",", "2", ",", "3", ",", "3", 
   ",", "2", ",", "6", ",", "5", ",", "5", ",", "5", ",", "5", ",", "3", ",", 
   "2", ",", "5", ",", "4", ",", "2", ",", "6", ",", "5", ",", "5", ",", "3", 
   ",", "5", ",", "2", ",", "2", ",", "1", ",", "5", ",", "4", ",", "2", ",", 
   "3", ",", "5", ",", "6", ",", "3", ",", "3", ",", "6", ",", "6", ",", "3", 
   ",", "5", ",", "6", ",", "5", ",", "2", ",", "2", ",", "5", ",", "6", ",", 
   "3", ",", "1", ",", "2", ",", "6", ",", "6", ",", "6", ",", "6", ",", "2", 
   ",", "4", ",", "2", ",", "2", ",", "4", ",", "1", ",", "2", ",", "5", ",", 
   "3", ",", "1", ",", "5", ",", "3", ",", "2", ",", "3", ",", "5", ",", "4", 
   ",", "3", ",", "5", ",", "3", ",", "2", ",", "1", ",", "6", ",", "2", ",", 
   "6", ",", "6", ",", "2", ",", "2", ",", "6", ",", "3", ",", "3", ",", "2", 
   ",", "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "2", ",", "4", ",", 
   "5", ",", "3", ",", "6", ",", "5", ",", "4", ",", "3", ",", "5", ",", "6", 
   ",", "6", ",", "3", ",", "6", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "3", ",", "2", ",", "2", ",", "5", ",", "5", ",", "3", ",", "2", 
   ",", "2", ",", "6", ",", "6", ",", "2", ",", "1", ",", "6", ",", "2", ",", 
   "1", ",", "4", ",", "6", ",", "6", ",", "5", ",", "6", ",", "5", ",", "5", 
   ",", "3", ",", "4", ",", "1", ",", "1", ",", "3", ",", "5", ",", "3", ",", 
   "3", ",", "3", ",", "4", ",", "5", ",", "2", ",", "3", ",", "5", ",", "6", 
   ",", "2", ",", "4", ",", "6", ",", "1", ",", "2", ",", "3", ",", "3", ",", 
   "2", ",", "2", ",", "5", ",", "2", ",", "1", ",", "6", ",", "1", ",", "2", 
   ",", "2", ",", "6", ",", "4", ",", "3", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "6", ",", "2", ",", "4", ",", "3", ",", "2", ",", "6", 
   ",", "2", ",", "2", ",", "5", ",", "6", ",", "2", ",", "3", ",", "2", ",", 
   "1", ",", "3", ",", "5", ",", "2", ",", "2", ",", "5", ",", "2", ",", "2", 
   ",", "2", ",", "6", ",", "6", ",", "5", ",", "1", ",", "2", ",", "2", ",", 
   "3", ",", "3", ",", "2", ",", "2", ",", "6", ",", "2", ",", "2", ",", "6", 
   ",", "6", ",", "6", ",", "5", ",", "2", ",", "6", ",", "5", ",", "3", ",", 
   "2", ",", "2", ",", "5", ",", "1", ",", "3", ",", "2", ",", "5", ",", "1", 
   ",", "4", ",", "4", ",", "4", ",", "3", ",", "5", ",", "5", ",", "5", ",", 
   "3", ",", "3", ",", "5", ",", "6", ",", "3", ",", "3", ",", "2", ",", "5", 
   ",", "3", ",", "6", ",", "3", ",", "6", ",", "4", ",", "6", ",", "5", ",", 
   "6", ",", "2", ",", "3", ",", "3", ",", "2", ",", "3", ",", "3", ",", "3", 
   ",", "2", ",", "2", ",", "6", ",", "3", ",", "3", ",", "5", ",", "6", ",", 
   "3", ",", "6", ",", "6", ",", "6", ",", "2", ",", "2", ",", "4", ",", "2", 
   ",", "3", ",", "6", ",", "2", ",", "4", ",", "2", ",", "3", ",", "2", ",", 
   "2", ",", "3", ",", "3", ",", "3", ",", "3", ",", "2", ",", "6", ",", "5", 
   ",", "3", ",", "6", ",", "4", ",", "3", ",", "1", ",", "1", ",", "2", ",", 
   "6", ",", "1", ",", "5", ",", "3", ",", "3", ",", "6", ",", "1", ",", "3", 
   ",", "4", ",", "1", ",", "5", ",", "2", ",", "2", ",", "5", ",", "2", ",", 
   "4", ",", "4", ",", "2", ",", "1", ",", "2", ",", "5", ",", "1", ",", "2", 
   ",", "6", ",", "6", ",", "2", ",", "1", ",", "3", ",", "5", ",", "5", ",", 
   "2", ",", "6", ",", "6", ",", "4", ",", "5", ",", "1", ",", "1", ",", "6", 
   ",", "4", ",", "2", ",", "5", ",", "2", ",", "2", ",", "2", ",", "6", ",", 
   "2", ",", "6", ",", "2", ",", "6", ",", "1", ",", "6", ",", "2", ",", "4", 
   ",", "1", ",", "5", ",", "6", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "6", ",", "2", ",", "5", ",", "5", ",", "4", ",", "6", ",", "4", 
   ",", "1", ",", "3", ",", "5", ",", "3", ",", "2", ",", "2", ",", "2", ",", 
   "5", ",", "2", ",", "1", ",", "6", ",", "5", ",", "3", ",", "2", ",", "3", 
   ",", "3", ",", "2", ",", "4", ",", "2", ",", "2", ",", "6", ",", "2", ",", 
   "6", ",", "2", ",", "1", ",", "6", ",", "2", ",", "3", ",", "3", ",", "2", 
   ",", "5", ",", "3", ",", "6", ",", "4", ",", "5", ",", "6", ",", "5", ",", 
   "3", ",", "5", ",", "5", ",", "4", ",", "5", ",", "4", ",", "3", ",", "2", 
   ",", "4", ",", "3", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", 
   "6", ",", "4", ",", "3", ",", "5", ",", "2", ",", "5", ",", "6", ",", "5", 
   ",", "6", ",", "2", ",", "2", ",", "5", ",", "2", ",", "2", ",", "2", ",", 
   "3", ",", "6", ",", "2", ",", "1", ",", "5", ",", "3", ",", "2", ",", "2", 
   ",", "5", ",", "5", ",", "2", ",", "5", ",", "5", ",", "2", ",", "3", ",", 
   "5", ",", "3", ",", "5", ",", "2", ",", "3", ",", "3", ",", "1", ",", "2", 
   ",", "5", ",", "3", ",", "6", ",", "5", ",", "5", ",", "5", ",", "2", ",", 
   "5", ",", "2", ",", "2", ",", "5", ",", "6", ",", "3", ",", "2", ",", "2", 
   ",", "3", ",", "2", ",", "2", ",", "6", ",", "2", ",", "5", ",", "4", ",", 
   "4", ",", "6", ",", "3", ",", "2", ",", "3", ",", "3", ",", "6", ",", "2", 
   ",", "3", ",", "5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "3", ",", "5", ",", "6", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "3", ",", "4", ",", "5", ",", "3", ",", 
   "5", ",", "2", ",", "2", ",", "5", ",", "6", ",", "6", ",", "6", ",", "6", 
   ",", "3", ",", "2", ",", "5", ",", "2", ",", "2", ",", "2", ",", "1", ",", 
   "2", ",", "3", ",", "3", ",", "2", ",", "3", ",", "3", ",", "5", ",", "3", 
   ",", "2", ",", "2", ",", "5", ",", "2", ",", "3", ",", "6", ",", "3", ",", 
   "4", ",", "2", ",", "2", ",", "3", ",", "3", ",", "2", ",", "2", ",", "2", 
   ",", "6", ",", "2", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", ",", 
   "5", ",", "2", ",", "3", ",", "2", ",", "3", ",", "2", ",", "2", ",", "6", 
   ",", "3", ",", "2", ",", "2", ",", "5", ",", "2", ",", "3", ",", "2", ",", 
   "2", ",", "2", ",", "5", ",", "4", ",", "1", ",", "3", ",", "6", ",", "6", 
   ",", "6", ",", "5", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", 
   "3", ",", "2", ",", "2", ",", "5", ",", "6", ",", "2", ",", "5", ",", "6", 
   ",", "6", ",", "3", ",", "5", ",", "5", ",", "3", ",", "5", ",", "1", ",", 
   "1", ",", "5", ",", "2", ",", "2", ",", "1", ",", "5", ",", "1", ",", "2", 
   ",", "2", ",", "2", ",", "3", ",", "3", ",", "6", ",", "6", ",", "1", ",", 
   "2", ",", "2", ",", "6", ",", "2", ",", "5", ",", "3", ",", "1", ",", "6", 
   ",", "3", ",", "6", ",", "3", ",", "3", ",", "2", ",", "5", ",", "6", ",", 
   "6", ",", "3", ",", "4", ",", "4", ",", "2", ",", "6", ",", "2", ",", "4", 
   ",", "5", ",", "2", ",", "6", ",", "3", ",", "1", ",", "4", ",", "6", ",", 
   "5", ",", "2", ",", "6", ",", "6", ",", "3", ",", "3", ",", "3", ",", "6", 
   ",", "3", ",", "2", ",", "2", ",", "3", ",", "2", ",", "5", ",", "2", ",", 
   "5", ",", "3", ",", "6", ",", "2", ",", "1", ",", "3", ",", "3", ",", "2", 
   ",", "3", ",", "3", ",", "5", ",", "3", ",", "4", ",", "6", ",", "2", ",", 
   "2", ",", "5", ",", "5", ",", "6", ",", "3", ",", "1", ",", "2", ",", "4", 
   ",", "1", ",", "5", ",", "6", ",", "5", ",", "2", ",", "5", ",", "2", ",", 
   "3", ",", "2", ",", "2", ",", "3", ",", "6", ",", "5", ",", "2", ",", "6", 
   ",", "2", ",", "3", ",", "2", ",", "6", ",", "1", ",", "3", ",", "3", ",", 
   "3", ",", "2", ",", "3", ",", "2", ",", "4", ",", "6", ",", "6", ",", "2", 
   ",", "6", ",", "3", ",", "2", ",", "3", ",", "5", ",", "3", ",", "3", ",", 
   "2", ",", "4", ",", "2", ",", "3", ",", "3", ",", "4", ",", "6", ",", "6", 
   ",", "5", ",", "6", ",", "3", ",", "3", ",", "2", ",", "6", ",", "5", ",", 
   "3", ",", "2", ",", "5", ",", "3", ",", "2", ",", "6", ",", "6", ",", "5", 
   ",", "5", ",", "3", ",", "2", ",", "2", ",", "2", ",", "4", ",", "2", ",", 
   "3", ",", "3", ",", "4", ",", "3", ",", "2", ",", "6", ",", "2", ",", "4", 
   ",", "2", ",", "1", ",", "6", ",", "2", ",", "5", ",", "2", ",", "6", ",", 
   "6", ",", "6", ",", "6", ",", "3", ",", "2", ",", "2", ",", "4", ",", "5", 
   ",", "2", ",", "2", ",", "6", ",", "2", ",", "5", ",", "2", ",", "6", ",", 
   "2", ",", "4", ",", "3", ",", "2", ",", "3", ",", "2", ",", "3", ",", "2", 
   ",", "2", ",", "6", ",", "2", ",", "1", ",", "5", ",", "1", ",", "4", ",", 
   "5", ",", "5", ",", "6", ",", "1", ",", "3", ",", "2", ",", "2", ",", "2", 
   ",", "5", ",", "5", ",", "6", ",", "2", ",", "3", ",", "3", ",", "4", ",", 
   "5", ",", "4", ",", "3", ",", "3", ",", "6", ",", "6", ",", "1", ",", "3", 
   ",", "5", ",", "2", ",", "6", ",", "2", ",", "4", ",", "6", ",", "4", ",", 
   "2", ",", "6", ",", "1", ",", "2", ",", "4", ",", "5", ",", "1", ",", "2", 
   ",", "3", ",", "2", ",", "2", ",", "5", ",", "4", ",", "2", ",", "2", ",", 
   "5", ",", "6", ",", "2", ",", "6", ",", "3", ",", "1", ",", "5", ",", "2", 
   ",", "6", ",", "2", ",", "6", ",", "5", ",", "5", ",", "3", ",", "6", ",", 
   "3", ",", "6", ",", "3", ",", "2", ",", "3", ",", "3", ",", "3", ",", "6", 
   ",", "1", ",", "5", ",", "2", ",", "2", ",", "3", ",", "6", ",", "2", ",", 
   "5", ",", "2", ",", "2", ",", "2", ",", "6", ",", "5", ",", "1", ",", "2", 
   ",", "6", ",", "2", ",", "2", ",", "6", ",", "6", ",", "3", ",", "4", ",", 
   "6", ",", "5", ",", "5", ",", "6", ",", "2", ",", "6", ",", "2", ",", "6", 
   ",", "2", ",", "4", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", 
   "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "6", ",", "2", 
   ",", "2", ",", "4", ",", "2", ",", "2", ",", "6", ",", "3", ",", "2", ",", 
   "3", ",", "3", ",", "2", ",", "5", ",", "2", ",", "1", ",", "5", ",", "6", 
   ",", "3", ",", "2", ",", "2", ",", "2", ",", "4", ",", "5", ",", "2", ",", 
   "3", ",", "2", ",", "2", ",", "5", ",", "2", ",", "3", ",", "5", ",", "2", 
   ",", "3", ",", "3", ",", "2", ",", "3", ",", "5", ",", "2", ",", "2", ",", 
   "6", ",", "6", ",", "3", ",", "4", ",", "2", ",", "5", ",", "5", ",", "4", 
   ",", "2", ",", "5", ",", "6", ",", "2", ",", "2", ",", "1", ",", "2", ",", 
   "6", ",", "2", ",", "1", ",", "3", ",", "2", ",", "5", ",", "3", ",", "5", 
   ",", "2", ",", "5", ",", "2", ",", "6", ",", "6", ",", "2", ",", "4", ",", 
   "1", ",", "3", ",", "4", ",", "5", ",", "2", ",", "2", ",", "1", ",", "5", 
   ",", "2", ",", "4", ",", "1", ",", "2", ",", "5", ",", "1", ",", "2", ",", 
   "5", ",", "4", ",", "2", ",", "2", ",", "4", ",", "2", ",", "4", ",", "3", 
   ",", "3", ",", "5", ",", "6", ",", "4", ",", "4", ",", "3", ",", "2", ",", 
   "6", ",", "2", ",", "6", ",", "2", ",", "6", ",", "4", ",", "6", ",", "2", 
   ",", "3", ",", "2", ",", "3", ",", "2", ",", "2", ",", "5", ",", "1", ",", 
   "5", ",", "2", ",", "2", ",", "4", ",", "2", ",", "2", ",", "6", ",", "2", 
   ",", "6", ",", "3", ",", "3", ",", "3", ",", "2", ",", "4", ",", "2", ",", 
   "6", ",", "4", ",", "5", ",", "3", ",", "2", ",", "4", ",", "2", ",", "3", 
   ",", "6", ",", "5", ",", "1", ",", "2", ",", "3", ",", "6", ",", "6", ",", 
   "5", ",", "5", ",", "6", ",", "3", ",", "6", ",", "2", ",", "6", ",", "6", 
   ",", "2", ",", "6", ",", "3", ",", "3", ",", "3", ",", "1", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "6", ",", "2", ",", "6", ",", "1", ",", "3", 
   ",", "4", ",", "4", ",", "5", ",", "3", ",", "6", ",", "6", ",", "6", ",", 
   "3", ",", "3", ",", "1", ",", "2", ",", "3", ",", "6", ",", "3", ",", "5", 
   ",", "4", ",", "2", ",", "6", ",", "3", ",", "5", ",", "5", ",", "2", ",", 
   "3", ",", "6", ",", "5", ",", "2", ",", "2", ",", "3", ",", "2", ",", "4", 
   ",", "2", ",", "4", ",", "5", ",", "1", ",", "3", ",", "3", ",", "2", ",", 
   "3", ",", "5", ",", "2", ",", "2", ",", "4", ",", "3", ",", "5", ",", "3", 
   ",", "6", ",", "4", ",", "3", ",", "6", ",", "2", ",", "2", ",", "4", ",", 
   "2", ",", "5", ",", "2", ",", "2", ",", "1", ",", "2", ",", "1", ",", "6", 
   ",", "6", ",", "2", ",", "3", ",", "6", ",", "5", ",", "6", ",", "5", ",", 
   "5", ",", "6", ",", "6", ",", "2", ",", "6", ",", "2", ",", "2", ",", "4", 
   ",", "5", ",", "6", ",", "2", ",", "5", ",", "2", ",", "5", ",", "6", ",", 
   "1", ",", "3", ",", "2", ",", "3", ",", "2", ",", "3", ",", "2", ",", "2", 
   ",", "1", ",", "2", ",", "1", ",", "2", ",", "2", ",", "3", ",", "6", ",", 
   "1", ",", "5", ",", "4", ",", "2", ",", "6", ",", "6", ",", "3", ",", "3", 
   ",", "4", ",", "2", ",", "2", ",", "2", ",", "6", ",", "5", ",", "6", ",", 
   "4", ",", "4", ",", "1", ",", "3", ",", "5", ",", "6", ",", "6", ",", "2", 
   ",", "1", ",", "3", ",", "5", ",", "5", ",", "5", ",", "2", ",", "3", ",", 
   "2", ",", "2", ",", "5", ",", "2", ",", "2", ",", "5", ",", "2", ",", "2", 
   ",", "3", ",", "3", ",", "4", ",", "2", ",", "5", ",", "2", ",", "5", ",", 
   "2", ",", "4", ",", "5", ",", "2", ",", "2", ",", "5", ",", "1", ",", "5", 
   ",", "4", ",", "6", ",", "6", ",", "4", ",", "6", ",", "3", ",", "5", ",", 
   "3", ",", "3", ",", "2", ",", "5", ",", "3", ",", "2", ",", "2", ",", "5", 
   ",", "5", ",", "6", ",", "3", ",", "6", ",", "3", ",", "2", ",", "6", ",", 
   "2", ",", "2", ",", "1", ",", "3", ",", "1", ",", "6", ",", "2", ",", "5", 
   ",", "6", ",", "3", ",", "6", ",", "4", ",", "2", ",", "6", ",", "2", ",", 
   "2", ",", "1", ",", "5", ",", "2", ",", "5", ",", "6", ",", "5", ",", "3", 
   ",", "2", ",", "3", ",", "2", ",", "5", ",", "3", ",", "2", ",", "2", ",", 
   "4", ",", "2", ",", "2", ",", "6", ",", "5", ",", "1", ",", "3", ",", "3", 
   ",", "6", ",", "1", ",", "5", ",", "4", ",", "6", ",", "6", ",", "2", ",", 
   "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", 
   ",", "6", ",", "6", ",", "2", ",", "5", ",", "3", ",", "5", ",", "2", ",", 
   "2", ",", "2", ",", "4", ",", "3", ",", "3", ",", "4", ",", "1", ",", "3", 
   ",", "4", ",", "3", ",", "6", ",", "2", ",", "6", ",", "5", ",", "5", ",", 
   "1", ",", "6", ",", "3", ",", "2", ",", "5", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "6", ",", "3", ",", 
   "6", ",", "3", ",", "2", ",", "5", ",", "1", ",", "3", ",", "3", ",", "6", 
   ",", "3", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "6", ",", "1", ",", "2", ",", "5", ",", "3", ",", "3", ",", "3", ",", "4", 
   ",", "6", ",", "4", ",", "2", ",", "6", ",", "2", ",", "5", ",", "6", ",", 
   "5", ",", "6", ",", "5", ",", "3", ",", "4", ",", "2", ",", "1", ",", "3", 
   ",", "2", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "4", ",", 
   "3", ",", "2", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "2", 
   ",", "3", ",", "1", ",", "5", ",", "2", ",", "5", ",", "2", ",", "3", ",", 
   "2", ",", "6", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "3", 
   ",", "5", ",", "5", ",", "3", ",", "4", ",", "1", ",", "2", ",", "4", ",", 
   "3", ",", "3", ",", "6", ",", "3", ",", "2", ",", "2", ",", "1", ",", "5", 
   ",", "5", ",", "2", ",", "2", ",", "6", ",", "4", ",", "4", ",", "5", ",", 
   "5", ",", "4", ",", "2", ",", "3", ",", "6", ",", "2", ",", "5", ",", "3", 
   ",", "6", ",", "2", ",", "6", ",", "2", ",", "4", ",", "4", ",", "5", ",", 
   "5", ",", "6", ",", "3", ",", "4", ",", "6", ",", "3", ",", "2", ",", "6", 
   ",", "3", ",", "2", ",", "5", ",", "1", ",", "2", ",", "1", ",", "3", ",", 
   "5", ",", "1", ",", "3", ",", "2", ",", "5", ",", "2", ",", "2", ",", "3", 
   ",", "2", ",", "6", ",", "3", ",", "3", ",", "5", ",", "3", ",", "6", ",", 
   "3", ",", "5", ",", "2", ",", "4", ",", "2", ",", "3", ",", "4", ",", "5", 
   ",", "3", ",", "4", ",", "5", ",", "3", ",", "1", ",", "3", ",", "3", ",", 
   "1", ",", "2", ",", "6", ",", "5", ",", "4", ",", "2", ",", "1", ",", "6", 
   ",", "1", ",", "5", ",", "5", ",", "6", ",", "1", ",", "2", ",", "3", ",", 
   "2", ",", "5", ",", "2", ",", "6", ",", "6", ",", "4", ",", "2", ",", "3", 
   ",", "1", ",", "1", ",", "4", ",", "4", ",", "2", ",", "1", ",", "2", ",", 
   "6", ",", "2", ",", "2", ",", "2", ",", "4", ",", "6", ",", "4", ",", "4", 
   ",", "5", ",", "5", ",", "2", ",", "6", ",", "3", ",", "4", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "6", ",", "6", ",", "4", ",", "4", ",", "2", 
   ",", "6", ",", "1", ",", "5", ",", "3", ",", "6", ",", "3", ",", "1", ",", 
   "1", ",", "4", ",", "2", ",", "6", ",", "6", ",", "6", ",", "3", ",", "5", 
   ",", "2", ",", "5", ",", "5", ",", "5", ",", "2", ",", "6", ",", "5", ",", 
   "2", ",", "4", ",", "2", ",", "3", ",", "6", ",", "6", ",", "6", ",", "2", 
   ",", "5", ",", "4", ",", "5", ",", "2", ",", "2", ",", "2", ",", "3", ",", 
   "3", ",", "1", ",", "6", ",", "2", ",", "1", ",", "4", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "5", ",", "2", ",", "6", ",", "6", ",", 
   "2", ",", "3", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "6", 
   ",", "5", ",", "6", ",", "2", ",", "2", ",", "2", ",", "3", ",", "5", ",", 
   "6", ",", "5", ",", "4", ",", "5", ",", "2", ",", "2", ",", "5", ",", "4", 
   ",", "3", ",", "1", ",", "5", ",", "2", ",", "2", ",", "4", ",", "2", ",", 
   "6", ",", "3", ",", "6", ",", "3", ",", "2", ",", "4", ",", "5", ",", "2", 
   ",", "5", ",", "6", ",", "3", ",", "1", ",", "6", ",", "5", ",", "6", ",", 
   "1", ",", "4", ",", "5", ",", "6", ",", "2", ",", "3", ",", "1", ",", "2", 
   ",", "5", ",", "4", ",", "6", ",", "2", ",", "4", ",", "2", ",", "5", ",", 
   "2", ",", "5", ",", "6", ",", "5", ",", "4", ",", "3", ",", "3", ",", "1", 
   ",", "5", ",", "1", ",", "4", ",", "5", ",", "5", ",", "2", ",", "6", ",", 
   "2", ",", "2", ",", "2", ",", "5", ",", "3", ",", "2", ",", "5", ",", "3", 
   ",", "2", ",", "3", ",", "4", ",", "5", ",", "3", ",", "5", ",", "5", ",", 
   "1", ",", "2", ",", "2", ",", "3", ",", "6", ",", "3", ",", "3", ",", "5", 
   ",", "6", ",", "6", ",", "6", ",", "6", ",", "5", ",", "3", ",", "5", ",", 
   "2", ",", "1", ",", "5", ",", "2", ",", "2", ",", "6", ",", "3", ",", "6", 
   ",", "2", ",", "5", ",", "1", ",", "3", ",", "4", ",", "3", ",", "3", ",", 
   "5", ",", "2", ",", "3", ",", "2", ",", "3", ",", "3", ",", "3", ",", "5", 
   ",", "3", ",", "5", ",", "4", ",", "5", ",", "3", ",", "6", ",", "2", ",", 
   "3", ",", "2", ",", "3", ",", "5", ",", "6", ",", "2", ",", "5", ",", "4", 
   ",", "5", ",", "2", ",", "1", ",", "4", ",", "6", ",", "2", ",", "2", ",", 
   "6", ",", "6", ",", "5", ",", "3", ",", "3", ",", "1", ",", "2", ",", "1", 
   ",", "3", ",", "3", ",", "6", ",", "2", ",", "2", ",", "5", ",", "5", ",", 
   "6", ",", "2", ",", "5", ",", "6", ",", "5", ",", "6", ",", "2", ",", "6", 
   ",", "3", ",", "4", ",", "6", ",", "3", ",", "2", ",", "6", ",", "2", ",", 
   "3", ",", "3", ",", "6", ",", "2", ",", "1", ",", "1", ",", "2", ",", "3", 
   ",", "1", ",", "6", ",", "1", ",", "4", ",", "6", ",", "5", ",", "2", ",", 
   "5", ",", "2", ",", "6", ",", "5", ",", "3", ",", "4", ",", "6", ",", "3", 
   ",", "2", ",", "4", ",", "2", ",", "1", ",", "3", ",", "4", ",", "6", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "5", ",", "2", ",", "2", ",", "5", 
   ",", "1", ",", "3", ",", "2", ",", "4", ",", "2", ",", "2", ",", "3", ",", 
   "3", ",", "5", ",", "6", ",", "4", ",", "1", ",", "5", ",", "2", ",", "2", 
   ",", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "3", ",", "6", ",", 
   "1", ",", "5", ",", "2", ",", "2", ",", "5", ",", "3", ",", "2", ",", "2", 
   ",", "3", ",", "2", ",", "5", ",", "5", ",", "3", ",", "5", ",", "3", ",", 
   "3", ",", "4", ",", "6", ",", "2", ",", "3", ",", "2", ",", "1", ",", "2", 
   ",", "4", ",", "2", ",", "3", ",", "5", ",", "3", ",", "2", ",", "3", ",", 
   "5", ",", "4", ",", "5", ",", "5", ",", "5", ",", "2", ",", "6", ",", "6", 
   ",", "6", ",", "2", ",", "2", ",", "5", ",", "6", ",", "3", ",", "1", ",", 
   "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", ",", "4", ",", "5", 
   ",", "2", ",", "6", ",", "3", ",", "2", ",", "5", ",", "4", ",", "3", ",", 
   "3", ",", "3", ",", "6", ",", "5", ",", "2", ",", "6", ",", "1", ",", "4", 
   ",", "2", ",", "2", ",", "5", ",", "5", ",", "3", ",", "5", ",", "6", ",", 
   "1", ",", "5", ",", "3", ",", "4", ",", "4", ",", "3", ",", "3", ",", "2", 
   ",", "2", ",", "5", ",", "5", ",", "3", ",", "2", ",", "6", ",", "4", ",", 
   "1", ",", "2", ",", "3", ",", "6", ",", "4", ",", "2", ",", "3", ",", "4", 
   ",", "2", ",", "6", ",", "5", ",", "6", ",", "6", ",", "5", ",", "5", ",", 
   "2", ",", "6", ",", "3", ",", "2", ",", "2", ",", "2", ",", "6", ",", "5", 
   ",", "1", ",", "2", ",", "5", ",", "6", ",", "2", ",", "2", ",", "5", ",", 
   "2", ",", "2", ",", "3", ",", "5", ",", "6", ",", "2", ",", "3", ",", "2", 
   ",", "4", ",", "6", ",", "3", ",", "5", ",", "3", ",", "3", ",", "3", ",", 
   "4", ",", "5", ",", "1", ",", "6", ",", "5", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "2", ",", "2", ",", "1", ",", "4", ",", "2", ",", "1", ",", 
   "2", ",", "3", ",", "5", ",", "4", ",", "6", ",", "2", ",", "2", ",", "6", 
   ",", "5", ",", "4", ",", "2", ",", "3", ",", "3", ",", "2", ",", "4", ",", 
   "2", ",", "6", ",", "3", ",", "2", ",", "4", ",", "2", ",", "5", ",", "1", 
   ",", "4", ",", "2", ",", "3", ",", "2", ",", "6", ",", "2", ",", "2", ",", 
   "5", ",", "6", ",", "2", ",", "1", ",", "2", ",", "3", ",", "2", ",", "1", 
   ",", "6", ",", "3", ",", "4", ",", "4", ",", "3", ",", "2", ",", "2", ",", 
   "2", ",", "6", ",", "2", ",", "2", ",", "6", ",", "6", ",", "5", ",", "3", 
   ",", "4", ",", "2", ",", "1", ",", "2", ",", "5", ",", "2", ",", "5", ",", 
   "5", ",", "3", ",", "6", ",", "5", ",", "4", ",", "4", ",", "6", ",", "5", 
   ",", "2", ",", "2", ",", "4", ",", "5", ",", "4", ",", "2", ",", "6", ",", 
   "2", ",", "3", ",", "3", ",", "2", ",", "3", ",", "5", ",", "3", ",", "4", 
   ",", "2", ",", "2", ",", "1", ",", "6", ",", "5", ",", "4", ",", "3", ",", 
   "2", ",", "2", ",", "1", ",", "6", ",", "6", ",", "2", ",", "2", ",", "6", 
   ",", "5", ",", "2", ",", "2", ",", "1", ",", "6", ",", "3", ",", "5", ",", 
   "5", ",", "6", ",", "6", ",", "6", ",", "1", ",", "2", ",", "3", ",", "5", 
   ",", "2", ",", "3", ",", "1", ",", "4", ",", "2", ",", "1", ",", "6", ",", 
   "3", ",", "2", ",", "5", ",", "6", ",", "6", ",", "1", ",", "1", ",", "2", 
   ",", "2", ",", "5", ",", "4", ",", "6", ",", "1", ",", "2", ",", "6", ",", 
   "3", ",", "2", ",", "2", ",", "6", ",", "4", ",", "5", ",", "2", ",", "4", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "6", ",", "6", ",", 
   "2", ",", "5", ",", "6", ",", "6", ",", "5", ",", "5", ",", "3", ",", "2", 
   ",", "2", ",", "3", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
   "6", ",", "2", ",", "6", ",", "2", ",", "1", ",", "2", ",", "3", ",", "2", 
   ",", "3", ",", "3", ",", "1", ",", "2", ",", "6", ",", "2", ",", "2", ",", 
   "5", ",", "2", ",", "6", ",", "3", ",", "2", ",", "6", ",", "4", ",", "3", 
   ",", "5", ",", "5", ",", "3", ",", "5", ",", "2", ",", "1", ",", "2", ",", 
   "1", ",", "3", ",", "4", ",", "2", ",", "3", ",", "2", ",", "4", ",", "2", 
   ",", "6", ",", "3", ",", "5", ",", "6", ",", "2", ",", "3", ",", "2", ",", 
   "4", ",", "4", ",", "2", ",", "2", ",", "5", ",", "3", ",", "3", ",", "2", 
   ",", "3", ",", "2", ",", "3", ",", "2", ",", "6", ",", "3", ",", "6", ",", 
   "6", ",", "5", ",", "3", ",", "5", ",", "4", ",", "3", ",", "4", ",", "5", 
   ",", "5", ",", "3", ",", "5", ",", "3", ",", "6", ",", "6", ",", "2", ",", 
   "4", ",", "2", ",", "2", ",", "5", ",", "6", ",", "5", ",", "2", ",", "2", 
   ",", "6", ",", "5", ",", "4", ",", "5", ",", "2", ",", "6", ",", "6", ",", 
   "6", ",", "2", ",", "1", ",", "2", ",", "6", ",", "6", ",", "5", ",", "3", 
   ",", "2", ",", "5", ",", "2", ",", "2", ",", "2", ",", "4", ",", "5", ",", 
   "5", ",", "2", ",", "4", ",", "4", ",", "2", ",", "5", ",", "2", ",", "3", 
   ",", "5", ",", "6", ",", "1", ",", "1", ",", "6", ",", "3", ",", "2", ",", 
   "6", ",", "3", ",", "5", ",", "6", ",", "6", ",", "2", ",", "3", ",", "3", 
   ",", "2", ",", "3", ",", "2", ",", "2", ",", "5", ",", "2", ",", "2", ",", 
   "4", ",", "1", ",", "5", ",", "2", ",", "3", ",", "6", ",", "5", ",", "5", 
   ",", "5", ",", "2", ",", "3", ",", "3", ",", "6", ",", "6", ",", "2", ",", 
   "2", ",", "1", ",", "2", ",", "6", ",", "3", ",", "5", ",", "6", ",", "5", 
   ",", "4", ",", "2", ",", "2", ",", "6", ",", "2", ",", "1", ",", "1", ",", 
   "3", ",", "2", ",", "6", ",", "2", ",", "4", ",", "2", ",", "3", ",", "2", 
   ",", "2", ",", "2", ",", "1", ",", "6", ",", "2", ",", "2", ",", "3", ",", 
   "4", ",", "2", ",", "2", ",", "5", ",", "2", ",", "2", ",", "3", ",", "5", 
   ",", "5", ",", "6", ",", "2", ",", "3", ",", "2", ",", "6", ",", "2", ",", 
   "5", ",", "2", ",", "2", ",", "5", ",", "2", ",", "3", ",", "3", ",", "6", 
   ",", "3", ",", "6", ",", "6", ",", "5", ",", "2", ",", "2", ",", "5", ",", 
   "5", ",", "4", ",", "1", ",", "5", ",", "4", ",", "5", ",", "6", ",", "2", 
   ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "6", ",", "3", ",", 
   "2", ",", "6", ",", "3", ",", "6", ",", "2", ",", "3", ",", "6", ",", "3", 
   ",", "2", ",", "4", ",", "5", ",", "6", ",", "3", ",", "2", ",", "2", ",", 
   "3", ",", "2", ",", "4", ",", "2", ",", "5", ",", "3", ",", "5", ",", "3", 
   ",", "2", ",", "5", ",", "1", ",", "5", ",", "3", ",", "5", ",", "2", ",", 
   "2", ",", "2", ",", "5", ",", "1", ",", "1", ",", "6", ",", "5", ",", "3", 
   ",", "6", ",", "2", ",", "6", ",", "2", ",", "2", ",", "1", ",", "2", ",", 
   "5", ",", "2", ",", "2", ",", "2", ",", "5", ",", "5", ",", "2", ",", "3", 
   ",", "2", ",", "6", ",", "2", ",", "3", ",", "1", ",", "4", ",", "5", ",", 
   "2", ",", "4", ",", "5", ",", "3", ",", "3", ",", "4", ",", "1", ",", "4", 
   ",", "5", ",", "2", ",", "5", ",", "2", ",", "2", ",", "2", ",", "3", ",", 
   "4", ",", "4", ",", "2", ",", "2", ",", "3", ",", "5", ",", "5", ",", "6", 
   ",", "3", ",", "2", ",", "6", ",", "3", ",", "2", ",", "4", ",", "3", ",", 
   "5", ",", "3", ",", "4", ",", "1", ",", "4", ",", "3", ",", "6", ",", "5", 
   ",", "6", ",", "1", ",", "4", ",", "2", ",", "3", ",", "6", ",", "2", ",", 
   "3", ",", "6", ",", "2", ",", "6", ",", "3", ",", "4", ",", "2", ",", "2", 
   ",", "6", ",", "3", ",", "2", ",", "3", ",", "3", ",", "2", ",", "3", ",", 
   "5", ",", "2", ",", "5", ",", "2", ",", "2", ",", "3", ",", "3", ",", "5", 
   ",", "5", ",", "5", ",", "2", ",", "6", ",", "2", ",", "4", ",", "5", ",", 
   "6", ",", "2", ",", "6", ",", "5", ",", "1", ",", "4", ",", "4", ",", "6", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "6", ",", "3", ",", "6", ",", 
   "1", ",", "3", ",", "6", ",", "6", ",", "5", ",", "5", ",", "3", ",", "6", 
   ",", "6", ",", "2", ",", "2", ",", "2", ",", "6", ",", "3", ",", "2", ",", 
   "3", ",", "5", ",", "6", ",", "1", ",", "2", ",", "6", ",", "5", ",", "2", 
   ",", "5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "5", ",", 
   "2", ",", "5", ",", "1", ",", "2", ",", "3", ",", "5", ",", "2", ",", "2", 
   ",", "2", ",", "6", ",", "4", ",", "6", ",", "5", ",", "3", ",", "3", ",", 
   "6", ",", "4", ",", "5", ",", "2", ",", "2", ",", "5", ",", "3", ",", "6", 
   ",", "5", ",", "3", ",", "5", ",", "2", ",", "1", ",", "2", ",", "5", ",", 
   "3", ",", "5", ",", "5", ",", "6", ",", "5", ",", "3", ",", "4", ",", "6", 
   ",", "2", ",", "6", ",", "3", ",", "3", ",", "2", ",", "1", ",", "3", ",", 
   "6", ",", "4", ",", "4", ",", "2", ",", "3", ",", "1", ",", "6", ",", "2", 
   ",", "3", ",", "3", ",", "3", ",", "6", ",", "6", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "6", ",", "3", ",", "5", ",", "2", ",", "6", ",", "3", 
   ",", "5", ",", "1", ",", "6", ",", "4", ",", "3", ",", "6", ",", "6", ",", 
   "3", ",", "2", ",", "5", ",", "6", ",", "5", ",", "6", ",", "3", ",", "3", 
   ",", "2", ",", "2", ",", "1", ",", "4", ",", "6", ",", "6", ",", "6", ",", 
   "5", ",", "5", ",", "2", ",", "4", ",", "5", ",", "2", ",", "4", ",", "5", 
   ",", "3", ",", "6", ",", "4", ",", "1", ",", "5", ",", "5", ",", "5", ",", 
   "5", ",", "2", ",", "3", ",", "2", ",", "2", ",", "5", ",", "6", ",", "5", 
   ",", "3", ",", "5", ",", "3", ",", "2", ",", "4", ",", "2", ",", "2", ",", 
   "2", ",", "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "6", 
   ",", "5", ",", "4", ",", "5", ",", "5", ",", "6", ",", "2", ",", "2", ",", 
   "3", ",", "5", ",", "6", ",", "2", ",", "2", ",", "5", ",", "5", ",", "4", 
   ",", "4", ",", "3", ",", "6", ",", "4", ",", "4", ",", "2", ",", "2", ",", 
   "6", ",", "5", ",", "4", ",", "4", ",", "6", ",", "2", ",", "6", ",", "3", 
   ",", "5", ",", "3", ",", "3", ",", "6", ",", "6", ",", "5", ",", "5", ",", 
   "5", ",", "3", ",", "3", ",", "5", ",", "3", ",", "4", ",", "2", ",", "3", 
   ",", "2", ",", "4", ",", "2", ",", "2", ",", "3", ",", "2", ",", "3", ",", 
   "2", ",", "4", ",", "6", ",", "6", ",", "3", ",", "6", ",", "2", ",", "2", 
   ",", "5", ",", "2", ",", "2", ",", "4", ",", "2", ",", "5", ",", "6", ",", 
   "3", ",", "1", ",", "2", ",", "4", ",", "2", ",", "6", ",", "2", ",", "6", 
   ",", "2", ",", "5", ",", "6", ",", "4", ",", "2", ",", "2", ",", "6", ",", 
   "1", ",", "5", ",", "5", ",", "2", ",", "2", ",", "4", ",", "1", ",", "2", 
   ",", "3", ",", "4", ",", "6", ",", "6", ",", "3", ",", "4", ",", "5", ",", 
   "3", ",", "3", ",", "4", ",", "2", ",", "3", ",", "5", ",", "3", ",", "5", 
   ",", "4", ",", "1", ",", "4", ",", "3", ",", "4", ",", "6", ",", "2", ",", 
   "3", ",", "4", ",", "2", ",", "6", ",", "2", ",", "2", ",", "4", ",", "3", 
   ",", "3", ",", "5", ",", "6", ",", "3", ",", "1", ",", "5", ",", "6", ",", 
   "5", ",", "4", ",", "3", ",", "2", ",", "6", ",", "1", ",", "2", ",", "6", 
   ",", "2", ",", "4", ",", "2", ",", "2", ",", "2", ",", "6", ",", "2", ",", 
   "2", ",", "3", ",", "5", ",", "6", ",", "2", ",", "2", ",", "3", ",", "2", 
   ",", "6", ",", "6", ",", "6", ",", "2", ",", "4", ",", "3", ",", "6", ",", 
   "3", ",", "1", ",", "3", ",", "5", ",", "5", ",", "2", ",", "2", ",", "3", 
   ",", "4", ",", "6", ",", "2", ",", "4", ",", "6", ",", "2", ",", "6", ",", 
   "6", ",", "1", ",", "5", ",", "2", ",", "5", ",", "5", ",", "4", ",", "2", 
   ",", "2", ",", "2", ",", "5", ",", "5", ",", "1", ",", "4", ",", "2", ",", 
   "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "6", ",", "1", ",", "5", 
   ",", "1", ",", "2", ",", "5", ",", "3", ",", "6", ",", "4", ",", "3", ",", 
   "6", ",", "6", ",", "4", ",", "3", ",", "2", ",", "3", ",", "5", ",", "3", 
   ",", "4", ",", "4", ",", "1", ",", "1", ",", "5", ",", "2", ",", "4", ",", 
   "5", ",", "6", ",", "6", ",", "5", ",", "6", ",", "2", ",", "2", ",", "3", 
   ",", "2", ",", "6", ",", "3", ",", "2", ",", "2", ",", "3", ",", "3", ",", 
   "6", ",", "4", ",", "3", ",", "6", ",", "2", ",", "3", ",", "2", ",", "2", 
   ",", "3", ",", "5", ",", "1", ",", "3", ",", "5", ",", "3", ",", "1", ",", 
   "5", ",", "1", ",", "3", ",", "6", ",", "3", ",", "2", ",", "2", ",", "6", 
   ",", "3", ",", "2", ",", "1", ",", "6", ",", "1", ",", "5", ",", "5", ",", 
   "5", ",", "5", ",", "6", ",", "3", ",", "2", ",", "2", ",", "2", ",", "6", 
   ",", "3", ",", "6", ",", "4", ",", "5", ",", "3", ",", "6", ",", "1", ",", 
   "4", ",", "5", ",", "6", ",", "2", ",", "4", ",", "2", ",", "6", ",", "2", 
   ",", "5", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", 
   "3", ",", "2", ",", "2", ",", "2", ",", "5", ",", "5", ",", "2", ",", "3", 
   ",", "3", ",", "6", ",", "4", ",", "2", ",", "5", ",", "1", ",", "5", ",", 
   "2", ",", "2", ",", "3", ",", "3", ",", "6", ",", "2", ",", "6", ",", "5", 
   ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "6", ",", 
   "3", ",", "6", ",", "5", ",", "4", ",", "3", ",", "5", ",", "1", ",", "6", 
   ",", "2", ",", "3", ",", "2", ",", "3", ",", "2", ",", "3", ",", "6", ",", 
   "1", ",", "5", ",", "2", ",", "2", ",", "2", ",", "6", ",", "2", ",", "6", 
   ",", "5", ",", "6", ",", "6", ",", "2", ",", "6", ",", "6", ",", "6", ",", 
   "6", ",", "2", ",", "5", ",", "3", ",", "6", ",", "3", ",", "4", ",", "2", 
   ",", "6", ",", "3", ",", "5", ",", "2", ",", "4", ",", "4", ",", "2", ",", 
   "2", ",", "6", ",", "6", ",", "3", ",", "2", ",", "6", ",", "2", ",", "5", 
   ",", "5", ",", "6", ",", "6", ",", "2", ",", "5", ",", "5", ",", "3", ",", 
   "2", ",", "2", ",", "4", ",", "6", ",", "6", ",", "2", ",", "4", ",", "4", 
   ",", "5", ",", "2", ",", "2", ",", "1", ",", "5", ",", "5", ",", "1", ",", 
   "6", ",", "6", ",", "4", ",", "3", ",", "2", ",", "6", ",", "1", ",", "1", 
   ",", "2", ",", "4", ",", "4", ",", "4", ",", "3", ",", "3", ",", "2", ",", 
   "2", ",", "3", ",", "2", ",", "6", ",", "4", ",", "2", ",", "6", ",", "2", 
   ",", "4", ",", "3", ",", "2", ",", "3", ",", "3", ",", "6", ",", "6", ",", 
   "6", ",", "3", ",", "2", ",", "5", ",", "6", ",", "2", ",", "4", ",", "3", 
   ",", "4", ",", "3", ",", "2", ",", "2", ",", "4", ",", "1", ",", "5", ",", 
   "4", ",", "4", ",", "3", ",", "6", ",", "4", ",", "5", ",", "6", ",", "1", 
   ",", "2", ",", "5", ",", "3", ",", "2", ",", "2", ",", "5", ",", "2", ",", 
   "4", ",", "4", ",", "5", ",", "2", ",", "5", ",", "5", ",", "5", ",", "5", 
   ",", "2", ",", "4", ",", "6", ",", "2", ",", "6", ",", "2", ",", "2", ",", 
   "3", ",", "2", ",", "6", ",", "4", ",", "5", ",", "3", ",", "5", ",", "4", 
   ",", "6", ",", "5", ",", "6", ",", "3", ",", "2", ",", "3", ",", "6", ",", 
   "6", ",", "6", ",", "1", ",", "2", ",", "6", ",", "2", ",", "3", ",", "3", 
   ",", "5", ",", "6", ",", "2", ",", "3", ",", "2", ",", "2", ",", "3", ",", 
   "2", ",", "3", ",", "4", ",", "6", ",", "2", ",", "3", ",", "2", ",", "2", 
   ",", "1", ",", "3", ",", "3", ",", "6", ",", "4", ",", "2", ",", "2", ",", 
   "6", ",", "2", ",", "4", ",", "3", ",", "6", ",", "5", ",", "2", ",", "2", 
   ",", "4", ",", "1", ",", "1", ",", "5", ",", "4", ",", "2", ",", "2", ",", 
   "2", ",", "3", ",", "3", ",", "3", ",", "2", ",", "3", ",", "2", ",", "6", 
   ",", "6", ",", "2", ",", "5", ",", "5", ",", "1", ",", "6", ",", "2", ",", 
   "2", ",", "1", ",", "3", ",", "2", ",", "3", ",", "6", ",", "2", ",", "5", 
   ",", "1", ",", "2", ",", "3", ",", "5", ",", "4", ",", "2", ",", "3", ",", 
   "2", ",", "4", ",", "6", ",", "6", ",", "1", ",", "6", ",", "3", ",", "6", 
   ",", "6", ",", "3", ",", "6", ",", "2", ",", "2", ",", "5", ",", "5", ",", 
   "2", ",", "5", ",", "2", ",", "6", ",", "3", ",", "6", ",", "3", ",", "6", 
   ",", "6", ",", "4", ",", "6", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "3", ",", "6", ",", "6", ",", "3", ",", "2", ",", "5", ",", "6", 
   ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", "5", ",", "2", ",", 
   "2", ",", "2", ",", "5", ",", "3", ",", "2", ",", "5", ",", "1", ",", "5", 
   ",", "4", ",", "6", ",", "4", ",", "3", ",", "2", ",", "2", ",", "2", ",", 
   "6", ",", "5", ",", "1", ",", "5", ",", "6", ",", "3", ",", "3", ",", "5", 
   ",", "6", ",", "6", ",", "2", ",", "4", ",", "6", ",", "4", ",", "3", ",", 
   "6", ",", "5", ",", "4", ",", "2", ",", "2", ",", "6", ",", "3", ",", "3", 
   ",", "5", ",", "2", ",", "6", ",", "3", ",", "6", ",", "6", ",", "4", ",", 
   "5", ",", "1", ",", "3", ",", "2", ",", "1", ",", "5", ",", "2", ",", "5", 
   ",", "1", ",", "6", ",", "2", ",", "4", ",", "3", ",", "5", ",", "2", ",", 
   "6", ",", "2", ",", "4", ",", "3", ",", "6", ",", "2", ",", "4", ",", "3", 
   ",", "4", ",", "4", ",", "5", ",", "6", ",", "5", ",", "2", ",", "6", ",", 
   "5", ",", "2", ",", "3", ",", "5", ",", "1", ",", "3", ",", "3", ",", "1", 
   ",", "6", ",", "6", ",", "5", ",", "1", ",", "4", ",", "2", ",", "6", ",", 
   "2", ",", "3", ",", "4", ",", "6", ",", "2", ",", "5", ",", "3", ",", "2", 
   ",", "5", ",", "3", ",", "2", ",", "2", ",", "6", ",", "3", ",", "5", ",", 
   "3", ",", "6", ",", "5", ",", "3", ",", "4", ",", "3", ",", "3", ",", "6", 
   ",", "2", ",", "1", ",", "5", ",", "6", ",", "5", ",", "2", ",", "3", ",", 
   "5", ",", "2", ",", "3", ",", "4", ",", "2", ",", "6", ",", "6", ",", "2", 
   ",", "3", ",", "3", ",", "2", ",", "3", ",", "3", ",", "1", ",", "5", ",", 
   "5", ",", "6", ",", "5", ",", "3", ",", "2", ",", "5", ",", "3", ",", "3", 
   ",", "2", ",", "2", ",", "3", ",", "2", ",", "3", ",", "2", ",", "5", ",", 
   "6", ",", "2", ",", "2", ",", "3", ",", "4", ",", "3", ",", "1", ",", "1", 
   ",", "2", ",", "1", ",", "2", ",", "5", ",", "2", ",", "6", ",", "4", ",", 
   "2", ",", "5", ",", "5", ",", "5", ",", "6", ",", "1", ",", "2", ",", "5", 
   ",", "6", ",", "5", ",", "3", ",", "3", ",", "5", ",", "2", ",", "4", ",", 
   "4", ",", "2", ",", "2", ",", "2", ",", "6", ",", "3", ",", "6", ",", "4", 
   ",", "3", ",", "2", ",", "3", ",", "5", ",", "2", ",", "2", ",", "2", ",", 
   "5", ",", "5", ",", "5", ",", "6", ",", "5", ",", "2", ",", "2", ",", "6", 
   ",", "2", ",", "4", ",", "3", ",", "2", ",", "2", ",", "5", ",", "1", ",", 
   "3", ",", "3", ",", "3", ",", "4", ",", "3", ",", "5", ",", "2", ",", "2", 
   ",", "1", ",", "3", ",", "2", ",", "5", ",", "2", ",", "6", ",", "2", ",", 
   "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "5", ",", "4", 
   ",", "5", ",", "2", ",", "2", ",", "3", ",", "3", ",", "5", ",", "2", ",", 
   "6", ",", "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "5", ",", "2", 
   ",", "2", ",", "5", ",", "5", ",", "6", ",", "2", ",", "3", ",", "2", ",", 
   "1", ",", "5", ",", "2", ",", "6", ",", "2", ",", "6", ",", "6", ",", "3", 
   ",", "5", ",", "4", ",", "3", ",", "4", ",", "3", ",", "2", ",", "6", ",", 
   "4", ",", "5", ",", "6", ",", "3", ",", "2", ",", "3", ",", "3", ",", "5", 
   ",", "5", ",", "4", ",", "1", ",", "2", ",", "5", ",", "4", ",", "5", ",", 
   "3", ",", "2", ",", "2", ",", "2", ",", "3", ",", "5", ",", "3", ",", "5", 
   ",", "2", ",", "4", ",", "2", ",", "5", ",", "2", ",", "2", ",", "2", ",", 
   "4", ",", "2", ",", "3", ",", "6", ",", "5", ",", "6", ",", "2", ",", "2", 
   ",", "6", ",", "2", ",", "2", ",", "4", ",", "4", ",", "5", ",", "5", ",", 
   "3", ",", "1", ",", "3", ",", "5", ",", "6", ",", "5", ",", "2", ",", "2", 
   ",", "1", ",", "3", ",", "5", ",", "2", ",", "6", ",", "2", ",", "2", ",", 
   "3", ",", "5", ",", "3", ",", "3", ",", "1", ",", "6", ",", "6", ",", "6", 
   ",", "2", ",", "5", ",", "3", ",", "6", ",", "2", ",", "2", ",", "3", ",", 
   "6", ",", "3", ",", "6", ",", "6", ",", "6", ",", "2", ",", "1", ",", "6", 
   ",", "3", ",", "1", ",", "5", ",", "2", ",", "2", ",", "2", ",", "5", ",", 
   "2", ",", "6", ",", "5", ",", "6", ",", "4", ",", "6", ",", "6", ",", "6", 
   ",", "3", ",", "5", ",", "2", ",", "3", ",", "1", ",", "5", ",", "5", ",", 
   "6", ",", "3", ",", "2", ",", "2", ",", "3", ",", "4", ",", "5", ",", "5", 
   ",", "5", ",", "5", ",", "2", ",", "2", ",", "1", ",", "3", ",", "3", ",", 
   "3", ",", "4", ",", "5", ",", "6", ",", "4", ",", "1", ",", "2", ",", "6", 
   ",", "4", ",", "1", ",", "6", ",", "2", ",", "6", ",", "4", ",", "2", ",", 
   "2", ",", "5", ",", "2", ",", "4", ",", "5", ",", "2", ",", "2", ",", "6", 
   ",", "2", ",", "3", ",", "2", ",", "2", ",", "3", ",", "5", ",", "3", ",", 
   "5", ",", "4", ",", "2", ",", "4", ",", "6", ",", "1", ",", "4", ",", "1", 
   ",", "5", ",", "4", ",", "5", ",", "4", ",", "2", ",", "1", ",", "2", ",", 
   "6", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", ",", "3", ",", "5", 
   ",", "2", ",", "6", ",", "5", ",", "3", ",", "5", ",", "2", ",", "2", ",", 
   "5", ",", "4", ",", "6", ",", "4", ",", "3", ",", "2", ",", "3", ",", "2", 
   ",", "2", ",", "3", ",", "2", ",", "2", ",", "5", ",", "4", ",", "3", ",", 
   "4", ",", "2", ",", "1", ",", "3", ",", "4", ",", "1", ",", "2", ",", "6", 
   ",", "1", ",", "6", ",", "6", ",", "3", ",", "5", ",", "3", ",", "1", ",", 
   "5", ",", "3", ",", "2", ",", "3", ",", "5", ",", "2", ",", "5", ",", "2", 
   ",", "2", ",", "2", ",", "6", ",", "5", ",", "2", ",", "2", ",", "5", ",", 
   "3", ",", "2", ",", "4", ",", "2", ",", "2", ",", "2", ",", "4", ",", "1", 
   ",", "3", ",", "5", ",", "3", ",", "5", ",", "2", ",", "3", ",", "5", ",", 
   "4", ",", "2", ",", "3", ",", "3", ",", "2", ",", "4", ",", "2", ",", "6", 
   ",", "5", ",", "3", ",", "3", ",", "3", ",", "2", ",", "6", ",", "5", ",", 
   "1", ",", "2", ",", "3", ",", "5", ",", "2", ",", "2", ",", "4", ",", "2", 
   ",", "4", ",", "2", ",", "3", ",", "2", ",", "5", ",", "1", ",", "3", ",", 
   "2", ",", "6", ",", "2", ",", "5", ",", "5", ",", "2", ",", "4", ",", "3", 
   ",", "2", ",", "2", ",", "5", ",", "1", ",", "1", ",", "3", ",", "5", ",", 
   "6", ",", "2", ",", "4", ",", "2", ",", "3", ",", "3", ",", "2", ",", "6", 
   ",", "2", ",", "6", ",", "1", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
   "2", ",", "3", ",", "1", ",", "6", ",", "5", ",", "3", ",", "6", ",", "6", 
   ",", "2", ",", "5", ",", "5", ",", "3", ",", "5", ",", "3", ",", "4", ",", 
   "4", ",", "6", ",", "4", ",", "6", ",", "4", ",", "2", ",", "1", ",", "1", 
   ",", "2", ",", "4", ",", "2", ",", "2", ",", "2", ",", "5", ",", "6", ",", 
   "6", ",", "2", ",", "3", ",", "2", ",", "4", ",", "2", ",", "2", ",", "2", 
   ",", "5", ",", "4", ",", "3", ",", "2", ",", "2", ",", "5", ",", "4", ",", 
   "6", ",", "6", ",", "5", ",", "5", ",", "6", ",", "4", ",", "4", ",", "5", 
   ",", "3", ",", "2", ",", "4", ",", "1", ",", "6", ",", "5", ",", "2", ",", 
   "3", ",", "2", ",", "3", ",", "5", ",", "6", ",", "4", ",", "4", ",", "5", 
   ",", "1", ",", "3", ",", "4", ",", "3", ",", "3", ",", "2", ",", "4", ",", 
   "4", ",", "3", ",", "6", ",", "3", ",", "6", ",", "2", ",", "2", ",", "4", 
   ",", "5", ",", "5", ",", "3", ",", "6", ",", "4", ",", "4", ",", "3", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "5", ",", "6", ",", "2", ",", "5", 
   ",", "5", ",", "2", ",", "5", ",", "6", ",", "3", ",", "1", ",", "3", ",", 
   "2", ",", "3", ",", "4", ",", "2", ",", "1", ",", "3", ",", "2", ",", "5", 
   ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", "5", ",", 
   "6", ",", "5", ",", "3", ",", "1", ",", "4", ",", "6", ",", "5", ",", "5", 
   ",", "6", ",", "6", ",", "2", ",", "2", ",", "2", ",", "3", ",", "6", ",", 
   "5", ",", "5", ",", "6", ",", "2", ",", "2", ",", "2", ",", "3", ",", "5", 
   ",", "6", ",", "3", ",", "5", ",", "1", ",", "2", ",", "5", ",", "2", ",", 
   "6", ",", "4", ",", "5", ",", "6", ",", "3", ",", "2", ",", "3", ",", "3", 
   ",", "6", ",", "6", ",", "3", ",", "1", ",", "4", ",", "4", ",", "5", ",", 
   "6", ",", "2", ",", "2", ",", "3", ",", "2", ",", "3", ",", "2", ",", "4", 
   ",", "3", ",", "2", ",", "5", ",", "5", ",", "6", ",", "1", ",", "6", ",", 
   "6", ",", "5", ",", "5", ",", "2", ",", "4", ",", "1", ",", "3", ",", "5", 
   ",", "6", ",", "1", ",", "6", ",", "2", ",", "2", ",", "5", ",", "6", ",", 
   "4", ",", "5", ",", "2", ",", "1", ",", "2", ",", "2", ",", "2", ",", "6", 
   ",", "5", ",", "6", ",", "6", ",", "3", ",", "2", ",", "6", ",", "4", ",", 
   "5", ",", "5", ",", "6", ",", "3", ",", "2", ",", "1", ",", "5", ",", "4", 
   ",", "3", ",", "2", ",", "4", ",", "6", ",", "3", ",", "2", ",", "4", ",", 
   "3", ",", "2", ",", "6", ",", "2", ",", "6", ",", "3", ",", "6", ",", "4", 
   ",", "5", ",", "1", ",", "5", ",", "2", ",", "4", ",", "3", ",", "4", ",", 
   "5", ",", "2", ",", "4", ",", "2", ",", "2", ",", "6", ",", "5", ",", "3", 
   ",", "5", ",", "2", ",", "6", ",", "5", ",", "4", ",", "6", ",", "3", ",", 
   "6", ",", "5", ",", "6", ",", "6", ",", "4", ",", "2", ",", "6", ",", "2", 
   ",", "3", ",", "5", ",", "2", ",", "3", ",", "1", ",", "5", ",", "5", ",", 
   "5", ",", "2", ",", "2", ",", "2", ",", "1", ",", "2", ",", "2", ",", "4", 
   ",", "6", ",", "2", ",", "3", ",", "1", ",", "2", ",", "5", ",", "5", ",", 
   "1", ",", "1", ",", "5", ",", "4", ",", "5", ",", "2", ",", "2", ",", "2", 
   ",", "5", ",", "3", ",", "5", ",", "6", ",", "3", ",", "2", ",", "4", ",", 
   "2", ",", "5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "6", ",", "3", ",", "2", ",", "2", ",", "4", ",", "4", ",", "2", ",", 
   "3", ",", "4", ",", "4", ",", "5", ",", "6", ",", "3", ",", "2", ",", "3", 
   ",", "6", ",", "6", ",", "4", ",", "3", ",", "3", ",", "2", ",", "5", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "5", ",", "5", ",", "6", ",", "2", 
   ",", "5", ",", "3", ",", "2", ",", "6", ",", "5", ",", "3", ",", "6", ",", 
   "2", ",", "5", ",", "2", ",", "5", ",", "2", ",", "3", ",", "2", ",", "3", 
   ",", "5", ",", "6", ",", "2", ",", "5", ",", "6", ",", "2", ",", "2", ",", 
   "3", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "5", 
   ",", "5", ",", "5", ",", "5", ",", "3", ",", "1", ",", "5", ",", "4", ",", 
   "5", ",", "2", ",", "5", ",", "4", ",", "2", ",", "5", ",", "4", ",", "5", 
   ",", "6", ",", "5", ",", "6", ",", "4", ",", "3", ",", "2", ",", "6", ",", 
   "4", ",", "2", ",", "3", ",", "6", ",", "2", ",", "2", ",", "4", ",", "3", 
   ",", "4", ",", "2", ",", "3", ",", "2", ",", "6", ",", "2", ",", "2", ",", 
   "5", ",", "6", ",", "2", ",", "5", ",", "3", ",", "5", ",", "4", ",", "2", 
   ",", "2", ",", "1", ",", "6", ",", "4", ",", "4", ",", "6", ",", "3", ",", 
   "6", ",", "2", ",", "2", ",", "6", ",", "2", ",", "2", ",", "2", ",", "5", 
   ",", "6", ",", "1", ",", "3", ",", "6", ",", "4", ",", "2", ",", "4", ",", 
   "1", ",", "6", ",", "2", ",", "3", ",", "3", ",", "1", ",", "2", ",", "6", 
   ",", "2", ",", "3", ",", "1", ",", "2", ",", "3", ",", "2", ",", "3", ",", 
   "2", ",", "2", ",", "3", ",", "6", ",", "4", ",", "2", ",", "3", ",", "4", 
   ",", "5", ",", "6", ",", "2", ",", "3", ",", "3", ",", "1", ",", "2", ",", 
   "3", ",", "1", ",", "3", ",", "6", ",", "5", ",", "5", ",", "6", ",", "2", 
   ",", "1", ",", "4", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", 
   "3", ",", "2", ",", "3", ",", "6", ",", "6", ",", "4", ",", "2", ",", "6", 
   ",", "4", ",", "4", ",", "2", ",", "3", ",", "4", ",", "2", ",", "2", ",", 
   "4", ",", "1", ",", "2", ",", "2", ",", "5", ",", "2", ",", "1", ",", "3", 
   ",", "4", ",", "4", ",", "2", ",", "5", ",", "6", ",", "2", ",", "3", ",", 
   "4", ",", "1", ",", "2", ",", "2", ",", "6", ",", "3", ",", "1", ",", "6", 
   ",", "5", ",", "2", ",", "2", ",", "6", ",", "4", ",", "3", ",", "2", ",", 
   "4", ",", "5", ",", "2", ",", "3", ",", "5", ",", "2", ",", "5", ",", "2", 
   ",", "3", ",", "3", ",", "1", ",", "2", ",", "2", ",", "4", ",", "2", ",", 
   "2", ",", "6", ",", "3", ",", "6", ",", "6", ",", "6", ",", "5", ",", "6", 
   ",", "2", ",", "1", ",", "3", ",", "2", ",", "6", ",", "6", ",", "4", ",", 
   "5", ",", "3", ",", "2", ",", "6", ",", "6", ",", "2", ",", "2", ",", "6", 
   ",", "2", ",", "6", ",", "6", ",", "2", ",", "2", ",", "1", ",", "3", ",", 
   "6", ",", "3", ",", "5", ",", "5", ",", "3", ",", "6", ",", "3", ",", "2", 
   ",", "4", ",", "3", ",", "1", ",", "2", ",", "5", ",", "2", ",", "5", ",", 
   "6", ",", "5", ",", "3", ",", "6", ",", "2", ",", "4", ",", "4", ",", "2", 
   ",", "6", ",", "5", ",", "2", ",", "6", ",", "2", ",", "6", ",", "6", ",", 
   "1", ",", "6", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "6", 
   ",", "2", ",", "3", ",", "3", ",", "3", ",", "5", ",", "2", ",", "6", ",", 
   "6", ",", "4", ",", "3", ",", "2", ",", "2", ",", "4", ",", "2", ",", "6", 
   ",", "5", ",", "5", ",", "3", ",", "2", ",", "2", ",", "5", ",", "2", ",", 
   "6", ",", "3", ",", "2", ",", "1", ",", "6", ",", "4", ",", "1", ",", "5", 
   ",", "2", ",", "2", ",", "1", ",", "5", ",", "3", ",", "3", ",", "3", ",", 
   "2", ",", "6", ",", "4", ",", "2", ",", "1", ",", "1", ",", "4", ",", "6", 
   ",", "1", ",", "3", ",", "3", ",", "3", ",", "4", ",", "6", ",", "3", ",", 
   "2", ",", "2", ",", "5", ",", "4", ",", "5", ",", "6", ",", "5", ",", "6", 
   ",", "3", ",", "3", ",", "5", ",", "2", ",", "6", ",", "2", ",", "5", ",", 
   "5", ",", "3", ",", "2", ",", "6", ",", "2", ",", "3", ",", "5", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "5", ",", "1", ",", 
   "5", ",", "5", ",", "3", ",", "6", ",", "2", ",", "3", ",", "2", ",", "6", 
   ",", "2", ",", "3", ",", "6", ",", "2", ",", "2", ",", "5", ",", "3", ",", 
   "2", ",", "6", ",", "6", ",", "3", ",", "2", ",", "1", ",", "3", ",", "2", 
   ",", "5", ",", "1", ",", "4", ",", "1", ",", "3", ",", "6", ",", "2", ",", 
   "4", ",", "4", ",", "3", ",", "2", ",", "5", ",", "2", ",", "1", ",", "1", 
   ",", "3", ",", "2", ",", "1", ",", "6", ",", "2", ",", "6", ",", "2", ",", 
   "6", ",", "3", ",", "3", ",", "3", ",", "3", ",", "1", ",", "6", ",", "3", 
   ",", "2", ",", "4", ",", "1", ",", "3", ",", "4", ",", "2", ",", "3", ",", 
   "2", ",", "2", ",", "5", ",", "1", ",", "2", ",", "3", ",", "6", ",", "5", 
   ",", "1", ",", "3", ",", "6", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "3", ",", "2", ",", "2", ",", "4", ",", "3", ",", "3", ",", "4", ",", "3", 
   ",", "2", ",", "6", ",", "2", ",", "3", ",", "6", ",", "2", ",", "3", ",", 
   "2", ",", "6", ",", "2", ",", "6", ",", "2", ",", "2", ",", "5", ",", "2", 
   ",", "5", ",", "2", ",", "2", ",", "5", ",", "6", ",", "2", ",", "5", ",", 
   "3", ",", "3", ",", "1", ",", "4", ",", "3", ",", "6", ",", "2", ",", "2", 
   ",", "5", ",", "3", ",", "2", ",", "5", ",", "2", ",", "1", ",", "1", ",", 
   "2", ",", "2", ",", "4", ",", "3", ",", "2", ",", "6", ",", "4", ",", "1", 
   ",", "6", ",", "4", ",", "3", ",", "2", ",", "3", ",", "5", ",", "2", ",", 
   "5", ",", "6", ",", "3", ",", "5", ",", "6", ",", "2", ",", "2", ",", "6", 
   ",", "1", ",", "6", ",", "4", ",", "4", ",", "5", ",", "3", ",", "4", ",", 
   "2", ",", "4", ",", "5", ",", "5", ",", "2", ",", "2", ",", "2", ",", "3", 
   ",", "5", ",", "3", ",", "3", ",", "2", ",", "6", ",", "2", ",", "3", ",", 
   "6", ",", "4", ",", "6", ",", "3", ",", "5", ",", "6", ",", "3", ",", "2", 
   ",", "2", ",", "5", ",", "3", ",", "6", ",", "3", ",", "4", ",", "3", ",", 
   "5", ",", "3", ",", "2", ",", "2", ",", "3", ",", "3", ",", "2", ",", "4", 
   ",", "1", ",", "2", ",", "3", ",", "3", ",", "5", ",", "5", ",", "2", ",", 
   "6", ",", "6", ",", "2", ",", "6", ",", "5", ",", "6", ",", "2", ",", "2", 
   ",", "5", ",", "6", ",", "2", ",", "2", ",", "6", ",", "4", ",", "5", ",", 
   "5", ",", "6", ",", "2", ",", "2", ",", "3", ",", "4", ",", "2", ",", "5", 
   ",", "3", ",", "4", ",", "4", ",", "5", ",", "2", ",", "2", ",", "3", ",", 
   "1", ",", "6", ",", "3", ",", "6", ",", "6", ",", "2", ",", "6", ",", "2", 
   ",", "3", ",", "6", ",", "1", ",", "2", ",", "2", ",", "1", ",", "6", ",", 
   "5", ",", "2", ",", "5", ",", "2", ",", "2", ",", "6", ",", "5", ",", "6", 
   ",", "2", ",", "2", ",", "1", ",", "5", ",", "2", ",", "5", ",", "6", ",", 
   "2", ",", "5", ",", "2", ",", "1", ",", "3", ",", "4", ",", "2", ",", "4", 
   ",", "5", ",", "4", ",", "5", ",", "2", ",", "3", ",", "3", ",", "5", ",", 
   "2", ",", "2", ",", "6", ",", "2", ",", "2", ",", "5", ",", "2", ",", "3", 
   ",", "2", ",", "4", ",", "4", ",", "2", ",", "2", ",", "6", ",", "5", ",", 
   "2", ",", "3", ",", "4", ",", "5", ",", "3", ",", "3", ",", "2", ",", "5", 
   ",", "2", ",", "5", ",", "1", ",", "2", ",", "2", ",", "5", ",", "5", ",", 
   "3", ",", "3", ",", "4", ",", "2", ",", "6", ",", "5", ",", "2", ",", "3", 
   ",", "5", ",", "6", ",", "2", ",", "5", ",", "1", ",", "6", ",", "6", ",", 
   "5", ",", "4", ",", "5", ",", "2", ",", "3", ",", "5", ",", "1", ",", "6", 
   ",", "2", ",", "3", ",", "4", ",", "1", ",", "4", ",", "6", ",", "6", ",", 
   "2", ",", "2", ",", "3", ",", "3", ",", "6", ",", "1", ",", "5", ",", "6", 
   ",", "6", ",", "2", ",", "4", ",", "3", ",", "5", ",", "6", ",", "2", ",", 
   "4", ",", "2", ",", "2", ",", "6", ",", "6", ",", "2", ",", "6", ",", "6", 
   ",", "6", ",", "5", ",", "4", ",", "2", ",", "3", ",", "2", ",", "2", ",", 
   "6", ",", "6", ",", "2", ",", "5", ",", "4", ",", "2", ",", "3", ",", "6", 
   ",", "5", ",", "5", ",", "2", ",", "6", ",", "6", ",", "3", ",", "2", ",", 
   "5", ",", "5", ",", "2", ",", "5", ",", "5", ",", "3", ",", "3", ",", "5", 
   ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "5", ",", "1", ",", "5", ",", "4", ",", "2", ",", "6", ",", "4", ",", "3", 
   ",", "3", ",", "5", ",", "1", ",", "6", ",", "3", ",", "2", ",", "3", ",", 
   "2", ",", "2", ",", "5", ",", "5", ",", "6", ",", "3", ",", "5", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "6", ",", "2", ",", "5", ",", "2", ",", 
   "5", ",", "2", ",", "3", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "3", ",", "5", ",", "3", ",", "6", ",", "6", ",", "4", ",", 
   "6", ",", "3", ",", "2", ",", "3", ",", "6", ",", "3", ",", "1", ",", "2", 
   ",", "3", ",", "2", ",", "3", ",", "3", ",", "3", ",", "6", ",", "3", ",", 
   "2", ",", "2", ",", "2", ",", "1", ",", "6", ",", "3", ",", "3", ",", "6", 
   ",", "4", ",", "2", ",", "3", ",", "3", ",", "2", ",", "2", ",", "4", ",", 
   "6", ",", "5", ",", "4", ",", "2", ",", "2", ",", "6", ",", "2", ",", "3", 
   ",", "2", ",", "5", ",", "5", ",", "2", ",", "2", ",", "6", ",", "3", ",", 
   "2", ",", "1", ",", "3", ",", "6", ",", "3", ",", "3", ",", "1", ",", "5", 
   ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "6", ",", "2", ",", 
   "2", ",", "6", ",", "2", ",", "3", ",", "4", ",", "6", ",", "4", ",", "6", 
   ",", "3", ",", "1", ",", "5", ",", "4", ",", "3", ",", "2", ",", "5", ",", 
   "2", ",", "1", ",", "2", ",", "6", ",", "3", ",", "1", ",", "2", ",", "5", 
   ",", "2", ",", "3", ",", "3", ",", "4", ",", "2", ",", "3", ",", "2", ",", 
   "3", ",", "2", ",", "2", ",", "2", ",", "6", ",", "5", ",", "5", ",", "3", 
   ",", "2", ",", "4", ",", "6", ",", "4", ",", "3", ",", "2", ",", "5", ",", 
   "3", ",", "1", ",", "1", ",", "5", ",", "6", ",", "4", ",", "2", ",", "6", 
   ",", "3", ",", "5", ",", "3", ",", "2", ",", "3", ",", "5", ",", "6", ",", 
   "2", ",", "2", ",", "3", ",", "6", ",", "5", ",", "6", ",", "1", ",", "6", 
   ",", "2", ",", "2", ",", "1", ",", "2", ",", "3", ",", "6", ",", "6", ",", 
   "5", ",", "2", ",", "4", ",", "1", ",", "3", ",", "2", ",", "6", ",", "3", 
   ",", "6", ",", "4", ",", "3", ",", "4", ",", "6", ",", "4", ",", "2", ",", 
   "5", ",", "5", ",", "5", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", 
   ",", "5", ",", "6", ",", "6", ",", "2", ",", "5", ",", "2", ",", "5", ",", 
   "2", ",", "6", ",", "5", ",", "5", ",", "3", ",", "3", ",", "5", ",", "6", 
   ",", "4", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "5", ",", "2", ",", "2", ",", "2", ",", "3", ",", "5", ",", "5", ",", "3", 
   ",", "1", ",", "2", ",", "5", ",", "3", ",", "6", ",", "2", ",", "5", ",", 
   "3", ",", "6", ",", "2", ",", "6", ",", "1", ",", "2", ",", "6", ",", "5", 
   ",", "3", ",", "6", ",", "4", ",", "2", ",", "1", ",", "2", ",", "4", ",", 
   "5", ",", "2", ",", "4", ",", "5", ",", "3", ",", "5", ",", "3", ",", "2", 
   ",", "3", ",", "6", ",", "2", ",", "2", ",", "5", ",", "4", ",", "2", ",", 
   "5", ",", "2", ",", "4", ",", "2", ",", "6", ",", "1", ",", "6", ",", "3", 
   ",", "2", ",", "6", ",", "2", ",", "1", ",", "5", ",", "6", ",", "5", ",", 
   "2", ",", "3", ",", "6", ",", "2", ",", "3", ",", "4", ",", "3", ",", "2", 
   ",", "1", ",", "3", ",", "6", ",", "5", ",", "1", ",", "5", ",", "4", ",", 
   "3", ",", "3", ",", "6", ",", "4", ",", "4", ",", "2", ",", "2", ",", "5", 
   ",", "5", ",", "6", ",", "5", ",", "6", ",", "5", ",", "4", ",", "5", ",", 
   "4", ",", "2", ",", "3", ",", "3", ",", "3", ",", "3", ",", "2", ",", "5", 
   ",", "3", ",", "5", ",", "6", ",", "2", ",", "3", ",", "2", ",", "6", ",", 
   "2", ",", "2", ",", "2", ",", "1", ",", "5", ",", "6", ",", "5", ",", "5", 
   ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "3", ",", "4", ",", "2", ",", "2", ",", "6", ",", "6", ",", "2", ",", "6", 
   ",", "5", ",", "3", ",", "6", ",", "5", ",", "3", ",", "6", ",", "2", ",", 
   "5", ",", "3", ",", "4", ",", "2", ",", "5", ",", "2", ",", "6", ",", "3", 
   ",", "6", ",", "2", ",", "2", ",", "1", ",", "6", ",", "4", ",", "1", ",", 
   "5", ",", "3", ",", "3", ",", "5", ",", "1", ",", "4", ",", "2", ",", "6", 
   ",", "4", ",", "2", ",", "5", ",", "6", ",", "6", ",", "6", ",", "1", ",", 
   "2", ",", "6", ",", "1", ",", "1", ",", "5", ",", "5", ",", "2", ",", "1", 
   ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "6", ",", 
   "3", ",", "6", ",", "4", ",", "5", ",", "3", ",", "3", ",", "3", ",", "2", 
   ",", "3", ",", "3", ",", "5", ",", "6", ",", "6", ",", "3", ",", "5", ",", 
   "5", ",", "5", ",", "6", ",", "2", ",", "3", ",", "2", ",", "3", ",", "4", 
   ",", "3", ",", "2", ",", "5", ",", "4", ",", "6", ",", "2", ",", "2", ",", 
   "5", ",", "2", ",", "3", ",", "6", ",", "3", ",", "6", ",", "1", ",", "2", 
   ",", "4", ",", "2", ",", "1", ",", "5", ",", "6", ",", "2", ",", "6", ",", 
   "6", ",", "3", ",", "5", ",", "4", ",", "5", ",", "2", ",", "3", ",", "4", 
   ",", "3", ",", "6", ",", "1", ",", "3", ",", "5", ",", "5", ",", "3", ",", 
   "3", ",", "2", ",", "2", ",", "2", ",", "5", ",", "4", ",", "5", ",", "2", 
   ",", "5", ",", "5", ",", "4", ",", "4", ",", "3", ",", "4", ",", "1", ",", 
   "4", ",", "2", ",", "2", ",", "3", ",", "6", ",", "3", ",", "2", ",", "4", 
   ",", "2", ",", "3", ",", "3", ",", "3", ",", "6", ",", "6", ",", "2", ",", 
   "6", ",", "5", ",", "1", ",", "1", ",", "5", ",", "5", ",", "5", ",", "2", 
   ",", "6", ",", "3", ",", "5", ",", "2", ",", "2", ",", "5", ",", "3", ",", 
   "2", ",", "2", ",", "6", ",", "3", ",", "2", ",", "4", ",", "4", ",", "5", 
   ",", "2", ",", "2", ",", "1", ",", "3", ",", "3", ",", "4", ",", "2", ",", 
   "2", ",", "3", ",", "6", ",", "3", ",", "5", ",", "4", ",", "6", ",", "2", 
   ",", "6", ",", "5", ",", "2", ",", "2", ",", "6", ",", "2", ",", "2", ",", 
   "4", ",", "2", ",", "3", ",", "2", ",", "6", ",", "4", ",", "1", ",", "3", 
   ",", "2", ",", "6", ",", "2", ",", "6", ",", "5", ",", "2", ",", "3", ",", 
   "2", ",", "4", ",", "6", ",", "6", ",", "3", ",", "4", ",", "5", ",", "5", 
   ",", "2", ",", "4", ",", "5", ",", "5", ",", "1", ",", "6", ",", "5", ",", 
   "5", ",", "2", ",", "2", ",", "2", ",", "6", ",", "2", ",", "6", ",", "5", 
   ",", "2", ",", "6", ",", "2", ",", "5", ",", "4", ",", "3", ",", "5", ",", 
   "5", ",", "2", ",", "4", ",", "2", ",", "6", ",", "6", ",", "2", ",", "5", 
   ",", "2", ",", "3", ",", "2", ",", "1", ",", "6", ",", "2", ",", "4", ",", 
   "5", ",", "4", ",", "5", ",", "1", ",", "1", ",", "5", ",", "3", ",", "5", 
   ",", "5", ",", "2", ",", "2", ",", "6", ",", "3", ",", "2", ",", "2", ",", 
   "5", ",", "3", ",", "2", ",", "6", ",", "2", ",", "5", ",", "3", ",", "2", 
   ",", "2", ",", "6", ",", "3", ",", "6", ",", "5", ",", "5", ",", "3", ",", 
   "3", ",", "2", ",", "2", ",", "4", ",", "2", ",", "2", ",", "6", ",", "2", 
   ",", "2", ",", "3", ",", "6", ",", "5", ",", "4", ",", "6", ",", "1", ",", 
   "2", ",", "4", ",", "2", ",", "3", ",", "6", ",", "5", ",", "4", ",", "2", 
   ",", "3", ",", "3", ",", "2", ",", "2", ",", "3", ",", "3", ",", "2", ",", 
   "2", ",", "3", ",", "5", ",", "5", ",", "6", ",", "2", ",", "5", ",", "3", 
   ",", "2", ",", "2", ",", "2", ",", "6", ",", "5", ",", "3", ",", "1", ",", 
   "6", ",", "5", ",", "6", ",", "1", ",", "2", ",", "4", ",", "6", ",", "3", 
   ",", "3", ",", "5", ",", "3", ",", "3", ",", "6", ",", "3", ",", "3", ",", 
   "3", ",", "5", ",", "3", ",", "5", ",", "2", ",", "5", ",", "3", ",", "2", 
   ",", "3", ",", "2", ",", "3", ",", "5", ",", "3", ",", "5", ",", "2", ",", 
   "4", ",", "6", ",", "6", ",", "6", ",", "6", ",", "2", ",", "5", ",", "5", 
   ",", "3", ",", "5", ",", "2", ",", "6", ",", "4", ",", "6", ",", "5", ",", 
   "1", ",", "1", ",", "1", ",", "6", ",", "3", ",", "2", ",", "4", ",", "6", 
   ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "2", ",", "1", ",", 
   "1", ",", "1", ",", "3", ",", "5", ",", "5", ",", "3", ",", "2", ",", "3", 
   ",", "3", ",", "5", ",", "3", ",", "4", ",", "3", ",", "1", ",", "6", ",", 
   "3", ",", "2", ",", "5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "5", ",", "3", ",", "2", ",", "5", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "5", ",", "4", ",", "1", ",", "4", ",", "2", ",", "3", 
   ",", "5", ",", "2", ",", "3", ",", "5", ",", "4", ",", "1", ",", "2", ",", 
   "5", ",", "5", ",", "2", ",", "2", ",", "5", ",", "6", ",", "4", ",", "5", 
   ",", "2", ",", "5", ",", "3", ",", "3", ",", "3", ",", "2", ",", "2", ",", 
   "2", ",", "3", ",", "2", ",", "6", ",", "5", ",", "2", ",", "6", ",", "2", 
   ",", "6", ",", "3", ",", "3", ",", "2", ",", "6", ",", "6", ",", "5", ",", 
   "3", ",", "4", ",", "3", ",", "2", ",", "4", ",", "2", ",", "2", ",", "1", 
   ",", "6", ",", "2", ",", "5", ",", "6", ",", "4", ",", "6", ",", "5", ",", 
   "4", ",", "4", ",", "3", ",", "2", ",", "6", ",", "4", ",", "4", ",", "3", 
   ",", "5", ",", "2", ",", "3", ",", "5", ",", "3", ",", "5", ",", "6", ",", 
   "5", ",", "1", ",", "4", ",", "6", ",", "5", ",", "6", ",", "3", ",", "4", 
   ",", "1", ",", "6", ",", "4", ",", "3", ",", "2", ",", "3", ",", "2", ",", 
   "5", ",", "6", ",", "3", ",", "6", ",", "3", ",", "2", ",", "6", ",", "4", 
   ",", "4", ",", "6", ",", "6", ",", "3", ",", "4", ",", "4", ",", "2", ",", 
   "1", ",", "5", ",", "3", ",", "6", ",", "3", ",", "6", ",", "6", ",", "2", 
   ",", "3", ",", "3", ",", "6", ",", "3", ",", "2", ",", "4", ",", "5", ",", 
   "4", ",", "3", ",", "5", ",", "6", ",", "2", ",", "5", ",", "2", ",", "2", 
   ",", "6", ",", "5", ",", "4", ",", "6", ",", "5", ",", "6", ",", "3", ",", 
   "2", ",", "3", ",", "6", ",", "6", ",", "2", ",", "6", ",", "5", ",", "2", 
   ",", "2", ",", "4", ",", "4", ",", "4", ",", "2", ",", "3", ",", "5", ",", 
   "3", ",", "5", ",", "2", ",", "6", ",", "3", ",", "2", ",", "2", ",", "4", 
   ",", "2", ",", "5", ",", "5", ",", "2", ",", "6", ",", "2", ",", "3", ",", 
   "6", ",", "5", ",", "3", ",", "3", ",", "3", ",", "5", ",", "4", ",", "6", 
   ",", "3", ",", "2", ",", "3", ",", "6", ",", "3", ",", "2", ",", "2", ",", 
   "3", ",", "4", ",", "5", ",", "2", ",", "3", ",", "5", ",", "5", ",", "6", 
   ",", "5", ",", "3", ",", "3", ",", "1", ",", "2", ",", "6", ",", "1", ",", 
   "3", ",", "1", ",", "2", ",", "2", ",", "3", ",", "6", ",", "2", ",", "4", 
   ",", "6", ",", "2", ",", "5", ",", "5", ",", "2", ",", "2", ",", "5", ",", 
   "1", ",", "2", ",", "2", ",", "3", ",", "1", ",", "4", ",", "2", ",", "2", 
   ",", "3", ",", "2", ",", "2", ",", "3", ",", "5", ",", "1", ",", "6", ",", 
   "4", ",", "3", ",", "6", ",", "2", ",", "2", ",", "5", ",", "6", ",", "2", 
   ",", "2", ",", "5", ",", "2", ",", "3", ",", "1", ",", "6", ",", "6", ",", 
   "4", ",", "6", ",", "4", ",", "4", ",", "2", ",", "5", ",", "3", ",", "2", 
   ",", "1", ",", "4", ",", "5", ",", "6", ",", "3", ",", "3", ",", "6", ",", 
   "3", ",", "6", ",", "3", ",", "5", ",", "5", ",", "6", ",", "6", ",", "1", 
   ",", "3", ",", "2", ",", "5", ",", "3", ",", "2", ",", "1", ",", "2", ",", 
   "1", ",", "2", ",", "4", ",", "2", ",", "6", ",", "2", ",", "3", ",", "5", 
   ",", "3", ",", "3", ",", "2", ",", "5", ",", "3", ",", "4", ",", "6", ",", 
   "2", ",", "5", ",", "3", ",", "2", ",", "3", ",", "5", ",", "4", ",", "2", 
   ",", "2", ",", "3", ",", "2", ",", "6", ",", "2", ",", "2", ",", "3", ",", 
   "6", ",", "5", ",", "1", ",", "5", ",", "3", ",", "2", ",", "2", ",", "4", 
   ",", "6", ",", "3", ",", "6", ",", "4", ",", "2", ",", "5", ",", "2", ",", 
   "2", ",", "5", ",", "2", ",", "4", ",", "2", ",", "2", ",", "6", ",", "2", 
   ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", ",", "3", ",", "2", ",", 
   "1", ",", "4", ",", "2", ",", "4", ",", "4", ",", "4", ",", "2", ",", "6", 
   ",", "3", ",", "2", ",", "3", ",", "3", ",", "3", ",", "5", ",", "5", ",", 
   "5", ",", "2", ",", "2", ",", "4", ",", "4", ",", "4", ",", "6", ",", "3", 
   ",", "3", ",", "5", ",", "5", ",", "6", ",", "3", ",", "2", ",", "2", ",", 
   "3", ",", "2", ",", "2", ",", "5", ",", "6", ",", "5", ",", "1", ",", "6", 
   ",", "2", ",", "2", ",", "2", ",", "4", ",", "3", ",", "5", ",", "6", ",", 
   "3", ",", "6", ",", "4", ",", "2", ",", "4", ",", "5", ",", "5", ",", "3", 
   ",", "2", ",", "6", ",", "2", ",", "5", ",", "3", ",", "3", ",", "6", ",", 
   "2", ",", "2", ",", "6", ",", "2", ",", "3", ",", "2", ",", "3", ",", "3", 
   ",", "1", ",", "5", ",", "4", ",", "5", ",", "6", ",", "2", ",", "4", ",", 
   "4", ",", "2", ",", "2", ",", "5", ",", "1", ",", "4", ",", "2", ",", "5", 
   ",", "5", ",", "5", ",", "4", ",", "1", ",", "5", ",", "2", ",", "4", ",", 
   "6", ",", "5", ",", "6", ",", "6", ",", "4", ",", "2", ",", "3", ",", "1", 
   ",", "3", ",", "1", ",", "2", ",", "6", ",", "3", ",", "5", ",", "5", ",", 
   "6", ",", "6", ",", "5", ",", "3", ",", "2", ",", "5", ",", "3", ",", "4", 
   ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.6809587760940104`*^9, 3.680960175270851*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "testLabel", "]"}]], "Input",
 CellChangeTimes->{{3.680958779532832*^9, 3.68095878307975*^9}}],

Cell[BoxData[
 RowBox[{"{", "9820", "}"}]], "Output",
 CellChangeTimes->{3.680958783458168*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"model", " ", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"training", "\[Rule]", "trainLabel"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680958841448865*^9, 3.680958886405607*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", "9", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["88380", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.680958873124566*^9, 3.6809589033013687`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", " ", "=", " ", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"model", ",", 
    RowBox[{"testing", "\[Rule]", "testLabel"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.680958996174706*^9, 3.680959025411903*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["9820", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["9820", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.4175152749490835`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.680959032327162*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<ConfusionMatrix\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.680959060636538*^9, 3.680959075843114*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "22", ",", "345", ",", "39", ",", "21", ",", "113", ",", "152", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "11", ",", "2079", ",", "263", ",", "39", ",", "257", ",", "293", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "628", ",", "1028", ",", "3", ",", "78", ",", "135", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "11", ",", "612", ",", "60", ",", "66", ",", "134", ",", "83", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17", ",", "796", ",", "98", ",", "35", ",", "450", ",", "282", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15", ",", "795", ",", "101", ",", "20", ",", "283", ",", "455", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.680959076767519*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "22", ",", "345", ",", "39", ",", "21", ",", "113", ",", "152", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11", ",", "2079", ",", "263", ",", "39", ",", "257", ",", "293", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "628", ",", "1028", ",", "3", ",", "78", ",", "135", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11", ",", "612", ",", "60", ",", "66", ",", "134", ",", "83", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "17", ",", "796", ",", "98", ",", "35", ",", "450", ",", "282", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15", ",", "795", ",", "101", ",", "20", ",", "283", ",", "455", ",", 
      "0"}], "}"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJyVkmtMk3cYxV/qpA6oinRJvWxA1GIEBTcU44AjAwFlISIJlzKxYNU6QRQm
KK6gIDNIUcSCDBGRGC+oFROl87IxpyByEVJAsYhSCvTyvv9XpYQBUxhbtk9L
P+wkJ8958nz55clxjk/atG0aRVHWU+ZO+a8cnOZnNxzL4pfdJaL4SoLKhqeP
vD8xweY7r6iKChruiuTeH8L6MKOgv/uPwPNY63lEuj6XwOnQDv+JdBM8lEr1
Iq0WXVm7t9T7sHDzrnnLWUyQUFPf4dxqQGx4bLDwMYO7XGRlR+vBqIv9qoc6
0e7uKK8IYCCS5c6889kANEV5X0liGkH9rbf/mSfF5YUZoSyWXrJVeUgIvEqr
VqWlGDHHGhdd8mm8tHNYLn6vRcX7lC+f+uZhzP7WGatSAkf6/sdud034cLLQ
Mz2nD5UoTODZsLgt5LQUxDF42Fj202/qQYxzhQ6iaAZNhplNogMD2FfkRoUv
akHEg4jxcg0D2xPlnlVKPTh1XiE/+j23yDltwcQom8RCKKvxl/cRtMYljzvf
N+FnxbAkiGIQulLS1m7W4dqR5jWebg/Aq61de0VH0O2ecjWjjcakvNRnV/QA
QuXG3iVqgnOah99/c5zG7Nw08fbr/Sg7GLKnVUwwknjK1rbPiK11yjuh4b1o
8Jcd1lwn4E8e2Os6nUbYSHJ2frDOIqfMXLDu20IWjb3ZMV0SFoaJ1Ty7WQyK
BNaK+QYaR4tHVI7HdIgyh4QlvriHJ1J+VPhOBo+53j5rrLTYd7ZpY8arVNS/
JE3Dh1msmvu76qKQhayNnxmYSCPnRr2LoJZAXy2WhQXSeBXwTM4Z0kHvurK6
bCNB8/rWY50XjLhdophYIX39v//5712bzlcGaTX/7BTlxJu9656ZganksiJ9
gQFPbi3vyHrXBX1pZ+acMYKvBf267c4MileMZfW4DqI9U+RSN4Ngq0zlcHC/
AVxBSMPmGA1kqdNV3dUMnGAzxh0dxKh2w2hgSodFzkSd32vxpyyemZe9OV3F
IOLRhy01BXrc9C2SSvMZBJwJyqE2D0J4Ps/jqL3aIs/CL6LOnVrGwkowlNSi
ZxDnEz+PcTcgNTLuxupUAmnERwHmz6f6vJM3+etiLfgJmyJ9vQk4bw719EQa
kTveYd/8vMci55+VB8tK
   "], {{0, 0}, {7, 6}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{5.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["2", TraditionalForm]}, {3.5, 
       FormBox["3", TraditionalForm]}, {2.5, 
       FormBox["4", TraditionalForm]}, {1.5, 
       FormBox["5", TraditionalForm]}, {0.5, 
       FormBox["6", TraditionalForm]}}, {{5.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["2", TraditionalForm]}, {3.5, 
       FormBox["3", TraditionalForm]}, {2.5, 
       FormBox["4", TraditionalForm]}, {1.5, 
       FormBox["5", TraditionalForm]}, {0.5, 
       FormBox["6", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{315.9999999999993, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.680959086235614*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model", " ", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"training", "\[Rule]", "trainLabel"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.680959141244969*^9, 3.680959160894829*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", "9", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["88380", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6809591647024097`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", " ", "=", " ", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"model", ",", 
    RowBox[{"testing", "\[Rule]", "testLabel"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.680959183157774*^9, 3.680959190268537*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["9820", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["9820", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.30274949083503055`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.680959191714781*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"cm", "[", "\"\<ConfusionMatrix\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.68095922598247*^9, 3.6809592326044617`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgA2J2IAaxIeCDPTp9l+FJe9Gx1/YbCmK83nx7ZJ9R/ahl
2tlNGOoGmt45UXfjgsWv7S+c8+ibe/ShfdDxk5/iT1XbO/zKd7ZIe2fPdcNj
4fW9b+0v2s5vXRHzasDcWcRYJei++o39maysoAX3n9nnaBzW8hK+MujcyTpJ
o0lszxv7iSduljCvf2DvVvKvX/B8if2JRXteWzx7a1+Zpemqc+u1feT91I3T
i57iNIde/npYJbLO/eEtKJ+BYZFHd7emxjv7LIMd58Ivv7Fn+zpp8pZfzwcs
PEVcn10PMnhrv6Ju5p9i1Zf2Qltmm21gvjtg7gEArAfzpg==
   "], {{0, 0}, {7, 6}}, {0, 
   1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{5.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["2", TraditionalForm]}, {3.5, 
       FormBox["3", TraditionalForm]}, {2.5, 
       FormBox["4", TraditionalForm]}, {1.5, 
       FormBox["5", TraditionalForm]}, {0.5, 
       FormBox["6", TraditionalForm]}}, {{5.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["2", TraditionalForm]}, {3.5, 
       FormBox["3", TraditionalForm]}, {2.5, 
       FormBox["4", TraditionalForm]}, {1.5, 
       FormBox["5", TraditionalForm]}, {0.5, 
       FormBox["6", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.680959233608697*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model", " ", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"training", "\[Rule]", "trainLabel"}], ",", 
    RowBox[{"Method", "->", "\"\<NeuralNetwork\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.680959265379878*^9, 3.680959277757683*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", "9", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["88380", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6809593063145647`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", " ", "=", " ", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"model", ",", 
    RowBox[{"testing", "\[Rule]", "testLabel"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["9820", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["9820", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.4965376782077393`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.68095931732316*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", "model", "]"}]], "Input",
 CellChangeTimes->{{3.680959354815114*^9, 3.6809593621549273`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->Larger],
          FrameMargins->{{10, 0}, {-5, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.93119, 0.93119, 0.93119],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         FrameBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Method\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "\<\"Neural network\"\>"},
             {
              StyleBox["\<\"Number of classes\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "6"},
             {
              StyleBox["\<\"Number of features\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "1"},
             {
              StyleBox["\<\"Number of training examples\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "88380"},
             {
              StyleBox["\<\"L1 regularization coefficient\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "0"},
             {
              StyleBox["\<\"L2 regularization coefficient\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "0.1`"},
             {
              StyleBox["\<\"Number of hidden layers\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "2"},
             {
              StyleBox["\<\"Hidden nodes\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], 
              TemplateBox[{",","\",\"","27","27"},
               "RowWithSeparators"]},
             {
              StyleBox["\<\"Hidden layer activation functions\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], 
              
              TemplateBox[{
               ",","\",\"","\"Rectified Linear\"","\"Rectified Linear\""},
               "RowWithSeparators"]},
             {
              StyleBox["\<\"CostFunction\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "\<\"Cost Function\"\>"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             FontWeight -> "Light", FontFamily -> "Bitstream Vera Sans", 
              NumberMarks -> False},
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[2.0999999999999996`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->Left,
         BaseStyle->{Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], 
          Offset[1.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Background->RGBColor[0.9802, 0.9802, 0.9802],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Association[
  "Method" -> "Neural network", "Number of classes" -> 6, 
   "Number of features" -> 1, "Number of training examples" -> 88380, 
   "L1 regularization coefficient" -> 0, "L2 regularization coefficient" -> 
   0.1, "Number of hidden layers" -> 2, "Hidden nodes" -> Row[{27, 27}, ","], 
   "Hidden layer activation functions" -> 
   Row[{"Rectified Linear", "Rectified Linear"}, ","], "CostFunction" -> 
   "Cost Function"]]], "Output",
 CellChangeTimes->{3.680959362618814*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fe", " ", "=", " ", 
  RowBox[{"FeatureExtraction", "[", "training", "]"}]}]], "Input",
 CellChangeTimes->{{3.6809595141696863`*^9, 3.6809595390894003`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["FeatureExtractorFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 FormBox[
                  TagBox[
                   GridBox[{{
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.21999999999999997`}}, 
                    "Rows" -> {{-0.43}}}], "Grid"], TraditionalForm], {295, 
                 559}], 
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    
                    "]}, CurveClosed -> {1, 1}]}, {0, 0}], {{{
                   0.9218872152822039, -0.38745833621077697`}, {
                   0.38745833621077697`, 0.9218872152822039}}, Center}], {{{1,
                   0}, {0, 1}}, Center}], 
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    
                    "]}, CurveClosed -> {1, 1}]}, {42, 42}], {{{
                   0.9559629086345702, 
                   0.2934875079367644}, {-0.2934875079367644, 
                   0.9559629086345702}}, Center}], {{{0.8, 0.}, {0., 0.8}}, 
                  Center}]}, ImagePadding -> 0.2, 
               PlotRange -> {{242, 348}, {506, 612}}, PlotRangeClipping -> 
               True, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", "9", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Length of extracted vector: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["9", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 FormBox[
                  TagBox[
                   GridBox[{{
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.21999999999999997`}}, 
                    "Rows" -> {{-0.43}}}], "Grid"], TraditionalForm], {295, 
                 559}], 
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    
                    "]}, CurveClosed -> {1, 1}]}, {0, 0}], {{{
                   0.9218872152822039, -0.38745833621077697`}, {
                   0.38745833621077697`, 0.9218872152822039}}, Center}], {{{1,
                   0}, {0, 1}}, Center}], 
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    
                    "]}, CurveClosed -> {1, 1}]}, {42, 42}], {{{
                   0.9559629086345702, 
                   0.2934875079367644}, {-0.2934875079367644, 
                   0.9559629086345702}}, Center}], {{{0.8, 0.}, {0., 0.8}}, 
                  Center}]}, ImagePadding -> 0.2, 
               PlotRange -> {{242, 348}, {506, 612}}, PlotRangeClipping -> 
               True, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", "9", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Length of extracted vector: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["9", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Invertibility: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Approximate\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Missing values: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Imputed\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("FeatureExtractorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.680959540206353*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DATA", "[", 
   RowBox[{"[", "4", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.680960057534081*^9, 3.6809601085014687`*^9}}],

Cell[BoxData["\<\"trainLabel\"\>"], "Output",
 CellChangeTimes->{{3.680960048501274*^9, 3.680960108812561*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"model", " ", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"training", "\[Rule]", "trainLabel"}], ",", 
    RowBox[{"Method", "->", "\"\<SupportVectorMachine\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6809601995884743`*^9, 3.68096020571812*^9}}]
},
WindowSize->{1305, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 382, 8, 44, "Input"],
Cell[965, 32, 10512, 255, 155, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[11514, 292, 252, 5, 36, "Input"],
Cell[11769, 299, 113, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11919, 306, 293, 7, 40, "Input"],
Cell[12215, 315, 8940, 223, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21192, 543, 138, 2, 44, "Input"],
Cell[21333, 547, 119, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21489, 555, 360, 9, 38, "Input"],
Cell[21852, 566, 9548, 225, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31437, 796, 137, 2, 44, "Input"],
Cell[31577, 800, 150, 3, 40, "Output"]
}, Open  ]],
Cell[31742, 806, 320, 8, 40, "Input"],
Cell[CellGroupData[{
Cell[32087, 818, 135, 2, 44, "Input"],
Cell[32225, 822, 120, 3, 50, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[32382, 830, 360, 9, 30, "Input"],
Cell[32745, 841, 103558, 1313, 6968, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136340, 2159, 136, 2, 38, "Input"],
Cell[136479, 2163, 95, 2, 50, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[136611, 2170, 243, 5, 62, "Input"],
Cell[136857, 2177, 8989, 182, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145883, 2364, 248, 5, 44, "Input"],
Cell[146134, 2371, 6824, 140, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152995, 2516, 143, 2, 44, "Input"],
Cell[153141, 2520, 868, 27, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154046, 2552, 910, 28, 67, "Input"],
Cell[154959, 2582, 2882, 59, 470, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[157878, 2646, 295, 7, 36, "Input"],
Cell[158176, 2655, 8971, 182, 79, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[167184, 2842, 248, 5, 36, "Input"],
Cell[167435, 2849, 6829, 140, 79, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[174301, 2994, 181, 3, 36, "Input"],
Cell[174485, 2999, 2015, 45, 424, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[176537, 3049, 281, 6, 36, "Input"],
Cell[176821, 3057, 8961, 182, 79, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[185819, 3244, 182, 4, 36, "Input"],
Cell[186004, 3250, 6817, 140, 79, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[192858, 3395, 146, 2, 30, "Input"],
Cell[193007, 3399, 6938, 187, 394, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[199982, 3591, 181, 3, 36, "Input"],
Cell[200166, 3596, 54842, 1012, 79, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[255045, 4613, 200, 5, 30, "Input"],
Cell[255248, 4620, 111, 1, 38, "Output"]
}, Open  ]],
Cell[255374, 4624, 293, 7, 44, "Input"]
}
]
*)

